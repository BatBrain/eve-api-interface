{
  "routes": [
    {
      "uri": "/account/AccountStatus.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "paidUntil",
          "type": "datetime",
          "desc": "The date until which the account is currently subscribed"
        },
        {
          "name": "createDate",
          "type": "datetime",
          "desc": "The date the account was created"
        },
        {
          "name": "logonCount",
          "type": "long",
          "desc": "The number of times you logged into CCP's services"
        },
        {
          "name": "logonMinutes",
          "type": "long",
          "desc": "The amount of time you actually spent logged on in the game"
        }
      ]
    },
    {
      "uri": "/account/APIKeyInfo.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "type",
          "type": "char",
          "desc": "The access level of the API key (i.e. Account, Character, Corporation)."
        },
        {
          "name": "expires",
          "type": "datetime",
          "desc": "The date the API key expires. This value will be empty if the key is set to not expire."
        },
        {
          "name": "name",
          "type": "rowset",
          "desc": "Rowset containing 1 row per character included in the API key."
        },
        {
          "name": "characterID",
          "type": "long",
          "desc": "The ID of the character for the requested data."
        },
        {
          "name": "characterName",
          "type": "char",
          "desc": "The name of the character for the requested data."
        },
        {
          "name": "corporationID",
          "type": "long",
          "desc": "The ID of the corporation for the requested data."
        },
        {
          "name": "corporationName",
          "type": "char",
          "desc": "The name of the corporation for the requested data."
        },
        {
          "name": "allianceID",
          "type": "long",
          "desc": "The ID of the alliance for the requested data."
        },
        {
          "name": "allianceName",
          "type": "char",
          "desc": "The name of the alliance for the requested data."
        },
        {
          "name": "factionID",
          "type": "long",
          "desc": "The ID of the faction for the requested data."
        },
        {
          "name": "factionName",
          "type": "char",
          "desc": "The name of the faction for the requested data."
        }
      ]
    },
    {
      "uri": "/account/Characters.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "name",
          "type": "char",
          "desc": "The name of the character for the requested data"
        },
        {
          "name": "characterID",
          "type": "int",
          "desc": "The ID of the character for the requested data, from"
        },
        {
          "name": "char/CharacterList](char_characterlist.md).",
          "type": "Only for",
          "desc": "char"
        },
        {
          "name": "endpoints. Optional when the API key is only valid for a single character.",
          "type": "corporationName",
          "desc": "char"
        },
        {
          "name": "The name of the corporation of the character.",
          "type": "corporationID",
          "desc": "int"
        },
        {
          "name": "The ID of the corporation of the character.",
          "type": "allianceName",
          "desc": "char"
        },
        {
          "name": "The name of the alliance of the character.",
          "type": "allianceID",
          "desc": "int"
        },
        {
          "name": "The ID of the alliance of the character.",
          "type": "factionName",
          "desc": "char"
        },
        {
          "name": "The name of the faction of the character.",
          "type": "factionID",
          "desc": "int"
        }
      ]
    },
    {
      "uri": "/api/CallList.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "groupID",
          "type": "long",
          "desc": "Group ID"
        },
        {
          "name": "name",
          "type": "char",
          "desc": "Names of the predefined API access groups as listed at the API key management page"
        },
        {
          "name": "description",
          "type": "char",
          "desc": "Description of the included access rights"
        },
        {
          "name": "calls rows",
          "type": "list of every access right",
          "desc": "accessMask"
        },
        {
          "name": "long",
          "type": "Necessary access mask of an API key for accessing this API endpoint",
          "desc": "type"
        },
        {
          "name": "char",
          "type": "Type of API access (Character, Corporation etc.) this mask grants",
          "desc": "name"
        },
        {
          "name": "char",
          "type": "API endpoint name",
          "desc": "groupID"
        },
        {
          "name": "long",
          "type": "callGroup (see above) to which this endpoint belongs",
          "desc": "description"
        }
      ]
    },
    {
      "uri": "/char/AccountBalance.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "accountID",
          "type": "int",
          "desc": "ID of the account"
        },
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account identifier"
        },
        {
          "name": "balance",
          "type": "decimal",
          "desc": "Amount of ISK in this character's wallet"
        }
      ]
    },
    {
      "uri": "/char/AssetList.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "flat",
          "type": "bool",
          "desc": "0 (False, default)"
        },
        {
          "name": "return a nested assets list",
          "type": "1 (True)",
          "desc": "return flat assets list"
        }
      ],
      "resultData": [
        {
          "name": "itemID",
          "type": "long",
          "desc": "Unique ID for this item."
        },
        {
          "name": "The ID of an item is stable if that item is not repackaged,",
          "type": "stacked, detached from a stack, assembled, or otherwise altered.",
          "desc": "If an item is changed"
        },
        {
          "name": "in one of these ways, then the ID will also change (see notes below).",
          "type": "locationID",
          "desc": "long"
        },
        {
          "name": "References a solar system or station. Note that in the nested XML response this",
          "type": "column is not present in the sub-asset lists, as those share the locationID of their parent node.",
          "desc": "Example"
        },
        {
          "name": "a module in a container in a ship in a station.. Whereas the flat XML",
          "type": "returns a locationID for each item. (See the notes on how to resolve the locationID to a",
          "desc": "solar system or station)"
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "The type of this item.",
          "type": "quantity",
          "desc": "long"
        },
        {
          "name": "How many items are in this stack.",
          "type": "flag",
          "desc": "int"
        },
        {
          "name": "Indicates something about this item's storage location. The flag is used to differentiate",
          "type": "between hangar divisions, drone bay, fitting location, and similar. Please see the",
          "desc": "Inventory Flags documentation."
        },
        {
          "name": "singleton",
          "type": "bool",
          "desc": "If True (1), indicates that this item is a singleton. This means that the item is not packaged."
        },
        {
          "name": "rawQuantity",
          "type": "long",
          "desc": "Items in the AssetList (and ContractItems) now include a rawQuantity attribute if the quantity in the DB is negative (see notes)."
        }
      ]
    },
    {
      "uri": "/char/Blueprints.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "itemID",
          "type": "long",
          "desc": "Unique ID for this item."
        },
        {
          "name": "The ID of an item is stable if that item is not repackaged,",
          "type": "stacked, detached from a stack, assembled, or otherwise altered.",
          "desc": "If an item is changed"
        },
        {
          "name": "in one of these ways, then the ID will also change (see notes below).",
          "type": "locationID",
          "desc": "long"
        },
        {
          "name": "References a solar system, station or itemID if this blueprint is located within a container.",
          "type": "If an itemID the Character",
          "desc": "AssetList API must be queried to find the container using the itemID,"
        },
        {
          "name": "from which the correct location of the Blueprint can be derived.",
          "type": "typeID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "The type of this item.",
          "desc": "typeName"
        },
        {
          "name": "string",
          "type": "The name of this item.",
          "desc": "quantity"
        },
        {
          "name": "long",
          "type": "Typically will be",
          "desc": "1 or"
        },
        {
          "name": "2 designating a singleton item, where",
          "type": "1 is an original and",
          "desc": "2 is a copy. It can be a positive integer if it is a stack of blueprint originals fresh from the market (no activities performed on them yet)."
        },
        {
          "name": "flagID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Indicates something about this item's storage location. The flag is used to differentiate",
          "type": "between hangar divisions, drone bay, fitting location, and similar. Please see the",
          "desc": "Inventory Flags documentation."
        },
        {
          "name": "timeEfficiency",
          "type": "long",
          "desc": "Time Efficiency Level of the blueprint, can be any even integer between 0 and 20."
        },
        {
          "name": "materialEfficiency",
          "type": "long",
          "desc": "Material Efficiency Level of the blueprint, can be any integer between 0 and 10."
        },
        {
          "name": "runs",
          "type": "long",
          "desc": "Number of runs remaining if the blueprint is a copy,"
        }
      ]
    },
    {
      "uri": "/char/Bookmarks.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which bookmarks will be requested"
        }
      ],
      "resultData": [
        {
          "name": "folderID",
          "type": "int",
          "desc": "Unique folder ID."
        },
        {
          "name": "folderName",
          "type": "string",
          "desc": "Folder name."
        },
        {
          "name": "bookmarks",
          "type": "rowset",
          "desc": "Rowset container 1 row per bookmark in the current folder."
        },
        {
          "name": "bookmarkID",
          "type": "int",
          "desc": "Unique bookmark ID."
        },
        {
          "name": "creatorID",
          "type": "long",
          "desc": "Bookmark creator ID. Can be character or corporation ID."
        },
        {
          "name": "created",
          "type": "datetime",
          "desc": "Date and time when bookmark was created."
        },
        {
          "name": "itemID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Item ID of the item to which the bookmark refers, or 0 if the bookmark refers to a location.",
          "type": "typeID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Type ID of the item to which the bookmark refers (even if the bookmark refers to a location instead of an item).",
          "desc": "locationID"
        },
        {
          "name": "long",
          "type": "1",
          "desc": "Location ID of the solar sytem to which this bookmark refers."
        },
        {
          "name": "x",
          "type": "double",
          "desc": "X location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "y",
          "type": "double",
          "desc": "Y location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "z",
          "type": "double",
          "desc": "Z location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "memo",
          "type": "string",
          "desc": "Bookmark description (owner specified)."
        },
        {
          "name": "note",
          "type": "string",
          "desc": "Bookmark annotation (owner specified)."
        }
      ]
    },
    {
      "uri": "/char/CalendarEventAttendees.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "eventIDs",
          "type": "long",
          "desc": "IDs of the events"
        }
      ],
      "resultData": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of the character."
        },
        {
          "name": "characterName",
          "type": "string",
          "desc": "Name of the character."
        },
        {
          "name": "response",
          "type": "string",
          "desc": "Can be"
        },
        {
          "name": "Undecided\",",
          "type": "Accepted\",",
          "desc": "Declined"
        },
        {
          "name": "or",
          "type": "Tentative",
          "desc": ""
        }
      ]
    },
    {
      "uri": "/char/CharacterSheet.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "The character ID."
        },
        {
          "name": "name",
          "type": "string",
          "desc": "Character Name."
        },
        {
          "name": "homeStationID",
          "type": "long",
          "desc": "ID for station where clone will spawn on demise."
        },
        {
          "name": "DoB",
          "type": "datetime",
          "desc": "Date character was created."
        },
        {
          "name": "race",
          "type": "string",
          "desc": "Characters race."
        },
        {
          "name": "bloodLineID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "ID for characters bloodline.",
          "type": "bloodLine",
          "desc": "string"
        },
        {
          "name": "Characters bloodline.",
          "type": "ancestryID",
          "desc": "long"
        },
        {
          "name": "2",
          "type": "ID for characters ancestry.",
          "desc": "ancestry"
        },
        {
          "name": "string",
          "type": "Characters ancestry.",
          "desc": "gender"
        },
        {
          "name": "string",
          "type": "Characters gender.",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Characters corporation.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID for characters corporation.",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Characters alliance.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID for characters alliance.",
          "desc": "factionName"
        },
        {
          "name": "string",
          "type": "Characters faction.",
          "desc": "factionID"
        },
        {
          "name": "long",
          "type": "3",
          "desc": "ID for characters faction."
        },
        {
          "name": "cloneTypeID",
          "type": "long",
          "desc": "4"
        },
        {
          "name": "Characters typeID for clone. (deprecated)",
          "type": "cloneName",
          "desc": "string"
        },
        {
          "name": "Name of Clone Type. (deprecated)",
          "type": "cloneSkillPoints",
          "desc": "long"
        },
        {
          "name": "Skillpoints covered by clone. (deprecated)",
          "type": "freeSkillPoints",
          "desc": "long"
        },
        {
          "name": "Skillpoints available to be assigned.",
          "type": "freeRespecs",
          "desc": "int"
        },
        {
          "name": "Number of available character attribute respecs.",
          "type": "cloneJumpDate",
          "desc": "datetime"
        },
        {
          "name": "Characters last clone jump.",
          "type": "lastRespecDate",
          "desc": "datetime"
        },
        {
          "name": "Characters last character attribute respec.",
          "type": "lastTimedRespec",
          "desc": "datetime"
        },
        {
          "name": "Characters last character attribute respec. (Using respec accrued over time (1 year))",
          "type": "remoteStationDate",
          "desc": "datetime"
        },
        {
          "name": "Characters last change of home station remotely.",
          "type": "jumpActivation",
          "desc": "datetime"
        },
        {
          "name": "Characters last capital jump activation.",
          "type": "jumpFatigue",
          "desc": "datetime"
        },
        {
          "name": "Characters jump fatigue expiry.",
          "type": "jumpLastUpdate",
          "desc": "datetime"
        },
        {
          "name": "Characters last jump update.",
          "type": "balance",
          "desc": "decimal"
        },
        {
          "name": "Characters wallet balance.",
          "type": "Attributes",
          "desc": "intelligence"
        },
        {
          "name": "int",
          "type": "Characters intelligence attribute.",
          "desc": "memory"
        },
        {
          "name": "int",
          "type": "Characters memory attribute.",
          "desc": "charisma"
        },
        {
          "name": "int",
          "type": "Characters charisma attribute.",
          "desc": "perception"
        },
        {
          "name": "int",
          "type": "Characters perception attribute.",
          "desc": "willpower"
        },
        {
          "name": "int",
          "type": "Characters willpower attribute.",
          "desc": "Rowset jumpClones"
        },
        {
          "name": "jumpCloneID",
          "type": "int",
          "desc": "Unique jump clone identifier."
        },
        {
          "name": "cloneTypeID",
          "type": "long",
          "desc": "4"
        },
        {
          "name": "Characters typeID for clone. (deprecated)",
          "type": "locationID",
          "desc": "long"
        },
        {
          "name": "References location ID.",
          "type": "cloneName",
          "desc": "string"
        },
        {
          "name": "Name given to clone.",
          "type": "Rowset jumpCloneImplants",
          "desc": "jumpCloneID"
        },
        {
          "name": "int",
          "type": "Unique jump clone identifier.",
          "desc": "typeID"
        },
        {
          "name": "long",
          "type": "4",
          "desc": "Type ID for implant"
        },
        {
          "name": "typeName",
          "type": "string",
          "desc": "Name for implant."
        },
        {
          "name": "Rowset implants",
          "type": "typeID",
          "desc": "long"
        },
        {
          "name": "4",
          "type": "Type ID for implant",
          "desc": "typeName"
        },
        {
          "name": "string",
          "type": "Name for implant.",
          "desc": "Rowset skills"
        },
        {
          "name": "typeID",
          "type": "long",
          "desc": "4"
        },
        {
          "name": "Type ID for implant.",
          "type": "skillpoints",
          "desc": "int"
        },
        {
          "name": "Number of skillpoints trained in this skill.",
          "type": "level",
          "desc": "int"
        },
        {
          "name": "Level skill has been trained to.",
          "type": "published",
          "desc": "int"
        },
        {
          "name": "0",
          "type": "unpublished, 1",
          "desc": "published"
        },
        {
          "name": "Rowset certificates (deprecated)",
          "type": "certificateID",
          "desc": "int"
        },
        {
          "name": "ID of certificate.",
          "type": "Rowset corporationRoles",
          "desc": "roleID"
        },
        {
          "name": "int64",
          "type": "ID of role.",
          "desc": "roleName"
        },
        {
          "name": "string",
          "type": "Name of role.",
          "desc": "Rowset corporationRolesAtHQ"
        },
        {
          "name": "Same as corporationRoles.",
          "type": "Rowset corporationRolesAtBase",
          "desc": "Same as corporationRoles."
        },
        {
          "name": "Rowset corporationRolesAtOther",
          "type": "Same as corporationRoles.",
          "desc": "Rowset corporationTitles"
        },
        {
          "name": "titleID",
          "type": "int32",
          "desc": "ID of title."
        },
        {
          "name": "titleName",
          "type": "string",
          "desc": "Name of title."
        }
      ]
    },
    {
      "uri": "/char/ChatChannels.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "channelID",
          "type": "long",
          "desc": "Unique channel ID."
        },
        {
          "name": "Always negative for player-created channels.",
          "type": "Permanent (CCP created) channels have a positive ID, but don't appear in the API.",
          "desc": "ownerID"
        },
        {
          "name": "long",
          "type": "Channel owner ID.",
          "desc": "ownerName"
        },
        {
          "name": "string",
          "type": "Channel owner name.",
          "desc": "displayName"
        },
        {
          "name": "string",
          "type": "Displayed name of channel.",
          "desc": "comparisonKey"
        },
        {
          "name": "rowset",
          "type": "Normalized, unique string used to compare channel names.",
          "desc": "hasPassword"
        },
        {
          "name": "boolean",
          "type": "If true, then this is a password protected channel.",
          "desc": "motd"
        },
        {
          "name": "string",
          "type": "Current channel message of the day.",
          "desc": "allowed"
        },
        {
          "name": "rowset",
          "type": "Rowset containing one row per allowed channel member.",
          "desc": "accessorID"
        },
        {
          "name": "long",
          "type": "ID of allowed channel member (see notes below).",
          "desc": "accessorName"
        },
        {
          "name": "string",
          "type": "Name of allowed channel member.",
          "desc": "blocked"
        },
        {
          "name": "rowset",
          "type": "Rowset containing one row per blocked channel member.",
          "desc": "accessorID"
        },
        {
          "name": "long",
          "type": "ID of blocked channel member (see notes below).",
          "desc": "accessorName"
        },
        {
          "name": "string",
          "type": "Name of blocked channel member.",
          "desc": "untilWhen"
        },
        {
          "name": "datetime",
          "type": "Time at which accessor will no longer be blocked.",
          "desc": "reason"
        },
        {
          "name": "string",
          "type": "Reason accessor is blocked.",
          "desc": "muted"
        },
        {
          "name": "rowset",
          "type": "Rowset containing one row per muted channel member.",
          "desc": "accessorID"
        },
        {
          "name": "long",
          "type": "ID of muted channel member (see notes below).",
          "desc": "accessorName"
        },
        {
          "name": "string",
          "type": "Name of muted channel member.",
          "desc": "untilWhen"
        },
        {
          "name": "datetime",
          "type": "Time at which accessor will no longer be muted.",
          "desc": "reason"
        },
        {
          "name": "string",
          "type": "Reason accessor is muted.",
          "desc": "operators"
        },
        {
          "name": "rowset",
          "type": "Rowset containing one row per channel operator.",
          "desc": "accessorID"
        },
        {
          "name": "long",
          "type": "ID of channel operator (see notes below).",
          "desc": "accessorName"
        }
      ]
    },
    {
      "uri": "/char/Clones.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which clones and attributes"
        }
      ],
      "resultData": [
        {
          "name": "race",
          "type": "string",
          "desc": "Characters race."
        },
        {
          "name": "bloodLineID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "ID for character bloodline.",
          "type": "bloodLine",
          "desc": "string"
        },
        {
          "name": "Character bloodline.",
          "type": "ancestryID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "ID for character ancestry.",
          "desc": "ancestry"
        },
        {
          "name": "string",
          "type": "Character ancestry.",
          "desc": "gender"
        },
        {
          "name": "string",
          "type": "Character gender.",
          "desc": "freeRespecs"
        },
        {
          "name": "int",
          "type": "Number of available character attribute respecs.",
          "desc": "cloneJumpDate"
        },
        {
          "name": "datetime",
          "type": "Last character clone jump.",
          "desc": "lastRespecDate"
        },
        {
          "name": "datetime",
          "type": "Last character attribute respec.",
          "desc": "lastTimedRespec"
        },
        {
          "name": "datetime",
          "type": "Last character attribute respec. (Using respec accrued over time (1 year))",
          "desc": "remoteStationDate"
        },
        {
          "name": "datetime",
          "type": "Last remote change of home station.",
          "desc": "attributes"
        },
        {
          "name": "object",
          "type": "intelligence",
          "desc": "int"
        },
        {
          "name": "Intelligence attribute.",
          "type": "memory",
          "desc": "int"
        },
        {
          "name": "Memory attribute.",
          "type": "charisma",
          "desc": "int"
        },
        {
          "name": "Charisma attribute.",
          "type": "perception",
          "desc": "int"
        },
        {
          "name": "Perception attribute.",
          "type": "willpower",
          "desc": "int"
        },
        {
          "name": "Willpower attribute.",
          "type": "jumpClones",
          "desc": "rowset"
        },
        {
          "name": "Rowset containing one row per jump clone.",
          "type": "jumpCloneID",
          "desc": "int"
        },
        {
          "name": "Unique jump clone identifier.",
          "type": "cloneTypeID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Clone type ID. (deprecated)",
          "desc": "locationID"
        },
        {
          "name": "long",
          "type": "Clone location ID.",
          "desc": "cloneName"
        },
        {
          "name": "string",
          "type": "Name given to clone.",
          "desc": "jumpCloneImplants"
        },
        {
          "name": "rowset",
          "type": "Rowset containing one row per jump clone implant.",
          "desc": "jumpCloneID"
        },
        {
          "name": "long",
          "type": "Unique jump clone identifier.",
          "desc": "typeID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Type ID for implant"
        },
        {
          "name": "typeName",
          "type": "string",
          "desc": "Name for implant."
        },
        {
          "name": "jumpActivation",
          "type": "datetime",
          "desc": "Last capital jump activation for character."
        },
        {
          "name": "jumpFatigue",
          "type": "datetime",
          "desc": "Jump fatigue expiry date for character."
        },
        {
          "name": "jumpLastUpdate",
          "type": "datetime",
          "desc": "Last jump update for character."
        }
      ]
    },
    {
      "uri": "/char/ContactList.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "Rowset contactList",
          "type": "contactID",
          "desc": "long"
        },
        {
          "name": "The characterID/corporationID of the character/agent/corporation in your contact list.",
          "type": "contactName",
          "desc": "char"
        },
        {
          "name": "The name of the contact. For deleted entities this field is empty.",
          "type": "standing",
          "desc": "int"
        },
        {
          "name": "The standings you set for this contact (see notes).",
          "type": "contactTypeID",
          "desc": "long"
        },
        {
          "name": "Determines the contact type",
          "type": "2",
          "desc": "Corporation"
        },
        {
          "name": "1373-1386",
          "type": "Character",
          "desc": "16159"
        },
        {
          "name": "Alliance",
          "type": "labelMask",
          "desc": "long"
        },
        {
          "name": "Label(s) from contactLabels associated with this entry.",
          "type": "inWatchlist",
          "desc": "bool"
        },
        {
          "name": "Has this entry been added to the character's watchlist",
          "type": "Valid for contactTypeID 1373 to 1386 only.",
          "desc": "Rowset contactLabels"
        },
        {
          "name": "labelID",
          "type": "long",
          "desc": "Unique label ID. Multiple labelIDs bitwise combined result in labelMask."
        },
        {
          "name": "name",
          "type": "char",
          "desc": "The label's text."
        },
        {
          "name": "Rowset corporateContactList",
          "type": "Same as contactList with the exception of inWatchlist missing.",
          "desc": "Rowset corporateContactLabels"
        },
        {
          "name": "Same as contactLabels.",
          "type": "Rowset allianceContactList",
          "desc": "Same as contactList with the exception of inWatchlist missing."
        }
      ]
    },
    {
      "uri": "/char/ContactNotifications.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "notificationID",
          "type": "long",
          "desc": "ID number of the notification."
        },
        {
          "name": "senderID",
          "type": "long",
          "desc": "ID of character/agent/corp who initiated this notification message."
        },
        {
          "name": "senderName",
          "type": "char",
          "desc": "Name of character/agent/corp who initiated this notification message."
        },
        {
          "name": "sentDate",
          "type": "datetime",
          "desc": "Date/time notification was sent."
        },
        {
          "name": "messageData",
          "type": "string",
          "desc": "Contents of the message (see notes)."
        },
        {
          "name": "messageData contents",
          "type": "level",
          "desc": "decimal"
        },
        {
          "name": "The new standing.",
          "type": "message",
          "desc": "string"
        }
      ]
    },
    {
      "uri": "/char/ContractBids.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "bidID",
          "type": "long",
          "desc": "Unique ID for the bid."
        },
        {
          "name": "contractID",
          "type": "long",
          "desc": "Unique ID for the contract."
        },
        {
          "name": "bidderID",
          "type": "long",
          "desc": "Character ID of the bidder."
        },
        {
          "name": "dateBid",
          "type": "datetime",
          "desc": "Date bid was placed."
        },
        {
          "name": "amount",
          "type": "decimal",
          "desc": "The ammount bid."
        }
      ]
    },
    {
      "uri": "/char/ContractItems.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "contractID",
          "type": "long",
          "desc": "ID of the contract"
        }
      ],
      "resultData": [
        {
          "name": "recordID",
          "type": "long",
          "desc": "Unique ID for the item."
        },
        {
          "name": "typeID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Type ID for item.",
          "type": "quantity",
          "desc": "long"
        },
        {
          "name": "Number of items in the stack.",
          "type": "rawQuantity",
          "desc": "long"
        },
        {
          "name": "2",
          "type": "This attribute will only show up if the quantity is a negative number in the DB. Negative quantities are in fact codes,",
          "desc": "1 indicates that the item is a singleton (non-stackable)."
        },
        {
          "name": "If the item happens to be a Blueprint,",
          "type": "1 is an Original and",
          "desc": "2 is a Blueprint Copy."
        },
        {
          "name": "singleton",
          "type": "long",
          "desc": "T1 if this is a singleton item, 0 if not."
        },
        {
          "name": "included",
          "type": "long",
          "desc": "1 if the contract issuer has submitted this item with the contract, 0 if the isser is asking for this item in the contract."
        }
      ]
    },
    {
      "uri": "/char/Contracts.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "contractID",
          "type": "long",
          "desc": "ID of a specific contract (Optional)"
        }
      ],
      "resultData": [
        {
          "name": "contractID",
          "type": "long",
          "desc": "Unique Identifier for the contract."
        },
        {
          "name": "issuerID",
          "type": "long",
          "desc": "Character ID for the issuer."
        },
        {
          "name": "issuerCorpID",
          "type": "long",
          "desc": "Characters corporation ID for the issuer."
        },
        {
          "name": "assigneeID",
          "type": "long",
          "desc": "ID to whom the contract is assigned, can be corporation or character ID."
        },
        {
          "name": "acceptorID",
          "type": "long",
          "desc": "Who will accept the contract. If assigneeID is same as acceptorID then CharacterID else CorporationID (The contract accepted by the corporation)."
        },
        {
          "name": "startStationID",
          "type": "int",
          "desc": "Start station ID (for Couriers contract)."
        },
        {
          "name": "endStationID",
          "type": "int",
          "desc": "End station ID (for Couriers contract)."
        },
        {
          "name": "type",
          "type": "string",
          "desc": "Type of the contract (ItemExchange, Courier, Loan or Auction)."
        },
        {
          "name": "status",
          "type": "string",
          "desc": "Status of the the contract (Outstanding, Deleted, Completed, Failed, CompletedByIssuer, CompletedByContractor, Cancelled, Rejected, Reversed or InProgress)"
        },
        {
          "name": "title",
          "type": "string",
          "desc": "Title of the contract"
        },
        {
          "name": "forCorp",
          "type": "boolean",
          "desc": "1 if the contract was issued on behalf of the issuer's corporation, 0 otherwise"
        },
        {
          "name": "availability",
          "type": "string",
          "desc": "Public or Private"
        },
        {
          "name": "dateIssued",
          "type": "datetime",
          "desc": "reation date of the contract"
        },
        {
          "name": "dateExpired",
          "type": "datetime",
          "desc": "Expiration date of the contract"
        },
        {
          "name": "dateAccepted",
          "type": "datetime",
          "desc": "Date of confirmation of contract"
        },
        {
          "name": "numDays",
          "type": "int",
          "desc": "Number of days to perform the contract"
        },
        {
          "name": "dateCompleted",
          "type": "datetime",
          "desc": "Date of completed of contract"
        },
        {
          "name": "price",
          "type": "float",
          "desc": "Price of contract (for ItemsExchange and Auctions)"
        },
        {
          "name": "reward",
          "type": "float",
          "desc": "Remuneration for contract (for Couriers only)"
        },
        {
          "name": "collateral",
          "type": "float",
          "desc": "Collateral price (for Couriers only)"
        },
        {
          "name": "buyout",
          "type": "float",
          "desc": "Buyout price (for Auctions only)"
        },
        {
          "name": "volume",
          "type": "float",
          "desc": "Volume of items in the contract"
        }
      ]
    },
    {
      "uri": "/char/FacWarStats.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "factionID",
          "type": "int",
          "desc": "ID number of the faction."
        },
        {
          "name": "factionName",
          "type": "string",
          "desc": "Name of the faction."
        },
        {
          "name": "enlisted",
          "type": "date time",
          "desc": "Date character enlisted in the faction."
        },
        {
          "name": "currentRank",
          "type": "int",
          "desc": "Characters current faction rank."
        },
        {
          "name": "highestRank",
          "type": "int",
          "desc": "Characters highest faction rank."
        },
        {
          "name": "killsYesterday",
          "type": "int",
          "desc": "Number of ships character destroyed yesterday."
        },
        {
          "name": "killsLastWeek",
          "type": "int",
          "desc": "Number of ships character destroyed last week."
        },
        {
          "name": "killsTotal",
          "type": "int",
          "desc": "Number of total ships character destroyed."
        },
        {
          "name": "victoryPointsYesterday",
          "type": "int",
          "desc": "Number of victory points character acquired yesterday."
        },
        {
          "name": "victoryPointsLastWeek",
          "type": "int",
          "desc": "Number of victory points character acquired last week."
        },
        {
          "name": "victoryPointsTotal",
          "type": "int",
          "desc": "Number of total victory points character acquired."
        }
      ]
    },
    {
      "uri": "/char/IndustryJobs.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "jobID",
          "type": "long",
          "desc": "Unique job ID."
        },
        {
          "name": "installerID",
          "type": "long",
          "desc": "Character ID of the character which installed this job."
        },
        {
          "name": "installerName",
          "type": "char",
          "desc": "Name of character which installed this job."
        },
        {
          "name": "facilityID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3",
          "desc": "Facility ID where this job is running (see cross-references)."
        },
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Solar system where facility is located.",
          "type": "solarSystemName",
          "desc": "string"
        },
        {
          "name": "Name of solar system where facility is located.",
          "type": "stationID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4",
          "type": "Station ID where industry facility is located.",
          "desc": "activityID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job activity ID (see cross-reference)."
        },
        {
          "name": "blueprintID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Blueprint asset item ID.",
          "type": "blueprintTypeID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4],",
          "type": "5",
          "desc": "Blueprint type ID."
        },
        {
          "name": "blueprintTypeName",
          "type": "char",
          "desc": "Name of installed blueprint."
        },
        {
          "name": "blueprintLocationID",
          "type": "int",
          "desc": "Location ID of the location from which the blueprint was installed."
        },
        {
          "name": "Normally a station ID, but can also be an asset (e.g. container) or corporation facility.",
          "type": "outputLocationID",
          "desc": "int"
        },
        {
          "name": "Location ID of the location to which the output of the job will be delivered.",
          "type": "Normally a station ID, but can also be a corporation facility.",
          "desc": "runs"
        },
        {
          "name": "int",
          "type": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy.",
          "desc": "cost"
        },
        {
          "name": "decimal",
          "type": "The sume of job installation fee and industry facility tax.",
          "desc": "teamID"
        },
        {
          "name": "int",
          "type": "N/A",
          "desc": "retired in Proteus"
        },
        {
          "name": "licensedRuns",
          "type": "int",
          "desc": "Number of runs blueprint is licensed for."
        },
        {
          "name": "probability",
          "type": "float",
          "desc": "Chance of success for invention."
        },
        {
          "name": "productTypeID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4],"
        },
        {
          "name": "5",
          "type": "Type ID of product (manufactured, copied or invented).",
          "desc": "productTypeName"
        },
        {
          "name": "int",
          "type": "Type name of product (manufactured, copied or invented).",
          "desc": "status"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job status (see cross-reference)."
        },
        {
          "name": "timeInSeconds",
          "type": "int",
          "desc": "Job duration in seconds."
        },
        {
          "name": "startDate",
          "type": "datetime",
          "desc": "Time when this job started."
        },
        {
          "name": "endDate",
          "type": "datetime",
          "desc": "Time when this job finished."
        },
        {
          "name": "pauseDate",
          "type": "datetime",
          "desc": "Time when this job was paused (i.e. time when the facility where this job was installed went offline)."
        },
        {
          "name": "completedDate",
          "type": "datetime",
          "desc": "Time when this job was completed."
        },
        {
          "name": "completedCharacterID",
          "type": "long",
          "desc": "Character ID of character which completed this job."
        },
        {
          "name": "successfulRuns",
          "type": "int",
          "desc": "Number of successful runs for this job."
        }
      ]
    },
    {
      "uri": "/char/IndustryJobsHistory.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "jobID",
          "type": "long",
          "desc": "Unique job ID."
        },
        {
          "name": "installerID",
          "type": "long",
          "desc": "Character ID of the character which installed this job."
        },
        {
          "name": "installerName",
          "type": "char",
          "desc": "Name of character which installed this job."
        },
        {
          "name": "facilityID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3",
          "desc": "Facility ID where this job is running (see cross-references)."
        },
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Solar system where facility is located.",
          "type": "solarSystemName",
          "desc": "string"
        },
        {
          "name": "Name of solar system where facility is located.",
          "type": "stationID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4",
          "type": "Station ID where industry facility is located.",
          "desc": "activityID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job activity ID (see cross-reference)."
        },
        {
          "name": "blueprintID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Blueprint asset item ID.",
          "type": "blueprintTypeID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4],",
          "type": "5",
          "desc": "Blueprint type ID."
        },
        {
          "name": "blueprintTypeName",
          "type": "char",
          "desc": "Name of installed blueprint."
        },
        {
          "name": "blueprintLocationID",
          "type": "int",
          "desc": "Location ID of the location from which the blueprint was installed."
        },
        {
          "name": "Normally a station ID, but can also be an asset (e.g. container) or corporation facility.",
          "type": "outputLocationID",
          "desc": "int"
        },
        {
          "name": "Location ID of the location to which the output of the job will be delivered.",
          "type": "Normally a station ID, but can also be a corporation facility.",
          "desc": "runs"
        },
        {
          "name": "int",
          "type": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy.",
          "desc": "cost"
        },
        {
          "name": "decimal",
          "type": "The sume of job installation fee and industry facility tax.",
          "desc": "teamID"
        },
        {
          "name": "int",
          "type": "N/A",
          "desc": "retired in Proteus"
        },
        {
          "name": "licensedRuns",
          "type": "int",
          "desc": "Number of runs blueprint is licensed for."
        },
        {
          "name": "probability",
          "type": "float",
          "desc": "Chance of success for invention."
        },
        {
          "name": "productTypeID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4],"
        },
        {
          "name": "5",
          "type": "Type ID of product (manufactured, copied or invented).",
          "desc": "productTypeName"
        },
        {
          "name": "int",
          "type": "Type name of product (manufactured, copied or invented).",
          "desc": "status"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job status (see cross-reference)."
        },
        {
          "name": "timeInSeconds",
          "type": "int",
          "desc": "Job duration in seconds."
        },
        {
          "name": "startDate",
          "type": "datetime",
          "desc": "Time when this job started."
        },
        {
          "name": "endDate",
          "type": "datetime",
          "desc": "Time when this job finished."
        },
        {
          "name": "pauseDate",
          "type": "datetime",
          "desc": "Time when this job was paused (i.e. time when the facility where this job was installed went offline)."
        },
        {
          "name": "completedDate",
          "type": "datetime",
          "desc": "Time when this job was completed."
        },
        {
          "name": "completedCharacterID",
          "type": "long",
          "desc": "Character ID of character which completed this job."
        },
        {
          "name": "successfulRuns",
          "type": "int",
          "desc": "Number of successful runs for this job."
        }
      ]
    },
    {
      "uri": "/char/KillLog.xml.aspxbeforeKillID119",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "beforeKillID",
          "type": "long",
          "desc": "Optional kill ID to show data after"
        }
      ],
      "resultData": [
        {
          "name": "killID",
          "type": "long",
          "desc": "ID of the kill."
        },
        {
          "name": "solarSystemID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "ID of the solarsystem containing the kill.",
          "type": "killTime",
          "desc": "datetime"
        },
        {
          "name": "Time of the kill.",
          "type": "moonID",
          "desc": "int"
        },
        {
          "name": "2",
          "type": "Moon by which the kill occurred at.",
          "desc": "victim"
        },
        {
          "name": "row",
          "type": "Single row of the victim's information.",
          "desc": "characterID"
        },
        {
          "name": "long",
          "type": "ID of the victim.",
          "desc": "characterName"
        },
        {
          "name": "string",
          "type": "Name of the victim.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of the victim's corporation.",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Name of the victim's corporation.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID of the victim's alliance (if applicable).",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Name of the victim's alliance (if applicable).",
          "desc": "factionID"
        },
        {
          "name": "long",
          "type": "ID of the victim's faction (if applicable).",
          "desc": "factionName"
        },
        {
          "name": "string",
          "type": "Name of the victim's faction (if applicable).",
          "desc": "damageTaken"
        },
        {
          "name": "long",
          "type": "Total damage the victim took before being killed.",
          "desc": "shipTypeID"
        },
        {
          "name": "long",
          "type": "ID of the victim's ship or the structure destroyed.",
          "desc": "x"
        },
        {
          "name": "double",
          "type": "X location in space of the kill.",
          "desc": "y"
        },
        {
          "name": "double",
          "type": "Y location in space of the kill.",
          "desc": "z"
        },
        {
          "name": "double",
          "type": "Z location in space of the kill.",
          "desc": "attackers"
        },
        {
          "name": "rowset",
          "type": "Rowset containing 1 row per attacker.",
          "desc": "characterID"
        },
        {
          "name": "long",
          "type": "ID of the attacker.",
          "desc": "characterName"
        },
        {
          "name": "string",
          "type": "Name of the attacker.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's corporation.",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's corporation.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's alliance.",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's alliance (if applicable).",
          "desc": "factionID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's faction (if applicable).",
          "desc": "factionName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's faction (if applicable).",
          "desc": "securityStatus"
        },
        {
          "name": "double",
          "type": "This attacker's security status.",
          "desc": "damageDone"
        },
        {
          "name": "long",
          "type": "Damage dealt by this attacker.",
          "desc": "finalBlow"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "if this attacker got the final blow,"
        },
        {
          "name": "0",
          "type": "if not.",
          "desc": "weaponTypeID"
        },
        {
          "name": "long",
          "type": "ID of the type of weapon used by this attacher, or drone, or NPC weapon.",
          "desc": "shipTypeID"
        },
        {
          "name": "long",
          "type": "ID of the type of ship used by this attacker.",
          "desc": "items"
        },
        {
          "name": "rowset",
          "type": "Rowset containing 1 row per item on the victim's ship.",
          "desc": "typeID"
        },
        {
          "name": "long",
          "type": "ID of the item.",
          "desc": "flag"
        },
        {
          "name": "byte",
          "type": "3",
          "desc": "The flag value of this item."
        },
        {
          "name": "qtyDropped",
          "type": "int",
          "desc": "Number of this item that was dropped."
        },
        {
          "name": "qtyDestroyed",
          "type": "int",
          "desc": "Number of this item that was destroyed."
        },
        {
          "name": "singleton",
          "type": "int",
          "desc": "2"
        },
        {
          "name": "if the item is a blueprint copy,",
          "type": "0",
          "desc": "if not."
        }
      ]
    },
    {
      "uri": "/char/KillMails.xml.aspxfromID",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Optional kill ID to show data after"
        },
        {
          "name": "rowCount",
          "type": "int",
          "desc": "Optional number to control the number of returned items (default 25, max 2560)"
        }
      ],
      "resultData": [
        {
          "name": "killID",
          "type": "long",
          "desc": "ID of the kill."
        },
        {
          "name": "solarSystemID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "ID of the solarsystem containing the kill.",
          "type": "killTime",
          "desc": "datetime"
        },
        {
          "name": "Time of the kill.",
          "type": "moonID",
          "desc": "int"
        },
        {
          "name": "2",
          "type": "Moon by which the kill occurred at.",
          "desc": "victim"
        },
        {
          "name": "row",
          "type": "Single row of the victim's information.",
          "desc": "characterName"
        },
        {
          "name": "string",
          "type": "Name of the victim.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of the victim's corporation.",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Name of the victim's corporation.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID of the victim's alliance (if applicable).",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Name of the victim's alliance (if applicable).",
          "desc": "factionID"
        },
        {
          "name": "long",
          "type": "ID of the victim's faction (if applicable).",
          "desc": "factionName"
        },
        {
          "name": "string",
          "type": "Name of the victim's faction (if applicable).",
          "desc": "damageTaken"
        },
        {
          "name": "long",
          "type": "Total damage the victim took before being killed.",
          "desc": "shipTypeID"
        },
        {
          "name": "long",
          "type": "ID of the victim's ship or the structure destroyed.",
          "desc": "x"
        },
        {
          "name": "double",
          "type": "X location in space of the kill.",
          "desc": "y"
        },
        {
          "name": "double",
          "type": "Y location in space of the kill.",
          "desc": "z"
        },
        {
          "name": "double",
          "type": "Z location in space of the kill.",
          "desc": "attackers"
        },
        {
          "name": "rowset",
          "type": "Rowset containing 1 row per attacker.",
          "desc": "characterID"
        },
        {
          "name": "long",
          "type": "ID of the attacker.",
          "desc": "characterName"
        },
        {
          "name": "string",
          "type": "Name of the attacker.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's corporation.",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's corporation.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's alliance.",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's alliance (if applicable).",
          "desc": "factionID"
        },
        {
          "name": "long",
          "type": "ID of the attacker's faction (if applicable).",
          "desc": "factionName"
        },
        {
          "name": "string",
          "type": "Name of the attacker's faction (if applicable).",
          "desc": "securityStatus"
        },
        {
          "name": "double",
          "type": "This attacker's security status.",
          "desc": "damageDone"
        },
        {
          "name": "long",
          "type": "Damage dealt by this attacker.",
          "desc": "finalBlow"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "if this attacker got the final blow,"
        },
        {
          "name": "0",
          "type": "if not.",
          "desc": "weaponTypeID"
        },
        {
          "name": "long",
          "type": "ID of the type of weapon used by this attacher, or drone, or NPC weapon.",
          "desc": "shipTypeID"
        },
        {
          "name": "long",
          "type": "ID of the type of ship used by this attacker.",
          "desc": "items"
        },
        {
          "name": "rowset",
          "type": "Rowset containing 1 row per item on the victim's ship.",
          "desc": "typeID"
        },
        {
          "name": "long",
          "type": "ID of the item.",
          "desc": "flag"
        },
        {
          "name": "byte",
          "type": "3",
          "desc": "The flag value of this item."
        },
        {
          "name": "qtyDropped",
          "type": "int",
          "desc": "Number of this item that was dropped."
        },
        {
          "name": "qtyDestroyed",
          "type": "int",
          "desc": "Number of this item that was destroyed."
        },
        {
          "name": "singleton",
          "type": "int",
          "desc": "2"
        },
        {
          "name": "if the item is a blueprint copy,",
          "type": "0",
          "desc": "if not."
        }
      ]
    },
    {
      "uri": "/char/Locations.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "IDs",
          "type": "list of long",
          "desc": "comma separated list of itemIDs that belong to the owner of the API key"
        }
      ],
      "resultData": [
        {
          "name": "itemID",
          "type": "long",
          "desc": "Unique ID for the item."
        },
        {
          "name": "itemName",
          "type": "string",
          "desc": "The name of the item."
        },
        {
          "name": "x",
          "type": "double",
          "desc": "The x coordinate of the item's location"
        },
        {
          "name": "y",
          "type": "double",
          "desc": "The y coordinate of the item's location"
        },
        {
          "name": "z",
          "type": "double",
          "desc": "The z coordinate of the item's location"
        }
      ]
    },
    {
      "uri": "/char/MailBodies.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "IDs",
          "type": "list of long",
          "desc": "Comma separated list of message IDs for which texts should be retrieved (see notes below)"
        }
      ],
      "resultData": [
        {
          "name": "messageID",
          "type": "int",
          "desc": "The unique message ID number."
        },
        {
          "name": "message text",
          "type": "CDATA",
          "desc": "DATA (character data) encoded message text."
        }
      ]
    },
    {
      "uri": "/char/mailinglists.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "listID",
          "type": "int",
          "desc": "The ID of the mailing list."
        },
        {
          "name": "displayName",
          "type": "string",
          "desc": "The name of the mailing list."
        }
      ]
    },
    {
      "uri": "/char/MailMessages.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "messageID",
          "type": "int",
          "desc": "The unique message ID number."
        },
        {
          "name": "senderID",
          "type": "int",
          "desc": "The character ID or Mailing List ID of the message originator."
        },
        {
          "name": "senderName",
          "type": "string",
          "desc": "The character name or Mailing List name of the message originator."
        },
        {
          "name": "sentDate",
          "type": "date string",
          "desc": "The date the message was sent."
        },
        {
          "name": "title",
          "type": "string",
          "desc": "The title/subject of the message"
        },
        {
          "name": "toCorpOrAllianceID",
          "type": "string",
          "desc": "The ID of a corporation/alliance that the message was sent to."
        },
        {
          "name": "toCharacterIDs",
          "type": "string",
          "desc": "Comma-separated list of character IDs of the characters that received the message."
        },
        {
          "name": "toListID",
          "type": "string",
          "desc": "Comma-separated list of mailing lists that the mail was sent to. Currently you can only send a mail to one list but that might change so we made this a list instead of a single ID. The IDs of lists the character is subscribed to can be resolved using the Character"
        }
      ]
    },
    {
      "uri": "/char/MarketOrders.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "Optional only if the key is character specific, otherwise mandatory",
          "type": "orderID",
          "desc": "long"
        }
      ],
      "resultData": [
        {
          "name": "orderID",
          "type": "long",
          "desc": "Unique order ID."
        },
        {
          "name": "charID",
          "type": "long",
          "desc": "Character ID of the character which placed this order."
        },
        {
          "name": "stationID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4"
        },
        {
          "name": "Station ID where order was placed.",
          "type": "volEntered",
          "desc": "int"
        },
        {
          "name": "Quantity of items required or offered at time order was placed.",
          "type": "volRemaining",
          "desc": "int"
        },
        {
          "name": "Quantity of items still required or offered.",
          "type": "minVolume",
          "desc": "int"
        },
        {
          "name": "For bids (buy orders), the minimum quantity that will be accepted in a matching offer (sell order).",
          "type": "orderState",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Current order state.",
          "desc": "typeID"
        },
        {
          "name": "int",
          "type": "1],",
          "desc": "2],"
        },
        {
          "name": "3],",
          "type": "4],",
          "desc": "5"
        },
        {
          "name": "The type ID of the item transacted in this order.",
          "type": "range",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Valid order range.",
          "desc": "accountKey"
        },
        {
          "name": "int",
          "type": "Wallet division for the buyer or seller of this order.",
          "desc": "Always 1000 for characters."
        },
        {
          "name": "Currently 1000 through 1006 for corporations.",
          "type": "duration",
          "desc": "int"
        },
        {
          "name": "Numer of days for which order is valid (starting from the issued date).",
          "type": "An order expires at time issued",
          "desc": "duration."
        },
        {
          "name": "escrow",
          "type": "decimal",
          "desc": "For buy orders, the amount of ISK in escrow."
        },
        {
          "name": "price",
          "type": "decimal",
          "desc": "Cost per unit for this order."
        },
        {
          "name": "bid",
          "type": "bool",
          "desc": "True (1) for a bid (buy) order."
        },
        {
          "name": "False (0) for an offer (sell) order.",
          "type": "issued",
          "desc": "datetime"
        }
      ]
    },
    {
      "uri": "/char/Medals.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "medalID",
          "type": "int",
          "desc": "Unique medal ID for this medal."
        },
        {
          "name": "reason",
          "type": "string",
          "desc": "Issuer entered reason."
        },
        {
          "name": "status",
          "type": "string",
          "desc": "If this medal viewable to the public through the Character Info Sheet. (Options"
        },
        {
          "name": "private, public)",
          "type": "issuerID",
          "desc": "int"
        },
        {
          "name": "Issuing character ID.",
          "type": "issued",
          "desc": "datetime"
        },
        {
          "name": "Date and time this medal was issued.",
          "type": "corporationID",
          "desc": "int"
        },
        {
          "name": "Corporation ID of issuing corporation.",
          "type": "title",
          "desc": "string"
        },
        {
          "name": "Title of Medal as displayed in-game.",
          "type": "description",
          "desc": "string"
        }
      ]
    },
    {
      "uri": "/char/Notifications.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "notificationID",
          "type": "long",
          "desc": "Unique notification ID."
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID describing the notification.",
          "type": "senderID",
          "desc": "long"
        },
        {
          "name": "ID of entity which sent notification.",
          "type": "senderName",
          "desc": "string"
        },
        {
          "name": "Name of entity which sent notification.",
          "type": "sentDate",
          "desc": "datetime"
        },
        {
          "name": "Date when notification was sent.",
          "type": "read",
          "desc": "boolean"
        }
      ]
    },
    {
      "uri": "/char/NotificationTexts.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which notification texts will be retrieved"
        },
        {
          "name": "IDs",
          "type": "list of long",
          "desc": "Comma separated list of notification IDs for which texts should be retrieved (see notes below)"
        }
      ],
      "resultData": [
        {
          "name": "notificationID",
          "type": "long",
          "desc": "Unique notification ID corresponding to the following notification text."
        },
        {
          "name": "notification text",
          "type": "CDATA",
          "desc": "CDATA (character data) encoded notification text."
        }
      ]
    },
    {
      "uri": "/char/PlanetaryColonies.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which planetary colonies will be retrieved"
        }
      ],
      "resultData": [
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Solar system where colony is located.",
          "type": "solarSystemName",
          "desc": "string"
        },
        {
          "name": "Name of solar system where colony is located.",
          "type": "planetID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Planet where colony is located.",
          "desc": "planetName"
        },
        {
          "name": "string",
          "type": "Name of planet where colony is located.",
          "desc": "planetTypeID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Type of planet where colony is located."
        },
        {
          "name": "planetTypeName",
          "type": "string",
          "desc": "Type name of planet where colony is located."
        },
        {
          "name": "ownerID",
          "type": "long",
          "desc": "Character ID of owner."
        },
        {
          "name": "ownerName",
          "type": "string",
          "desc": "Character name of owner."
        },
        {
          "name": "lastUpdate",
          "type": "datetime",
          "desc": "Time when colony was last modified."
        },
        {
          "name": "upgradeLevel",
          "type": "int",
          "desc": "Command center level for this colony."
        },
        {
          "name": "numberOfPins",
          "type": "int",
          "desc": "Colony pin count."
        }
      ]
    },
    {
      "uri": "/char/PlanetaryLinks.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which planetary links will be retrieved"
        },
        {
          "name": "planetID",
          "type": "int",
          "desc": "Planet ID of planet for which links will be retrieved"
        }
      ],
      "resultData": [
        {
          "name": "sourcePinID",
          "type": "long",
          "desc": "Source pin ID for this link."
        },
        {
          "name": "destinationPinID",
          "type": "long",
          "desc": "Destination pin ID for this link."
        },
        {
          "name": "linkLevel",
          "type": "int",
          "desc": "Current link upgrade level."
        }
      ]
    },
    {
      "uri": "/char/PlanetaryPins.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which planetary pins will be retrieved"
        },
        {
          "name": "planetID",
          "type": "int",
          "desc": "Planet ID of planet for which pins will be retrieved"
        }
      ],
      "resultData": [
        {
          "name": "pinID",
          "type": "long",
          "desc": "Unique pin ID."
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of facility installed at this pin.",
          "type": "typeName",
          "desc": "string"
        },
        {
          "name": "Type name of facility installed at this pin.",
          "type": "schematicID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Schematic ID of schematic installed in this facility.",
          "desc": "lastLaunchTime"
        },
        {
          "name": "datetime",
          "type": "Time when last operation at facility was started.",
          "desc": "cycleTime"
        },
        {
          "name": "int",
          "type": "Facility cycle time in minutes.",
          "desc": "quantityPerCycle"
        },
        {
          "name": "int",
          "type": "Number of items produced by this facility per cycle time (if this facility produces something).",
          "desc": "installTime"
        },
        {
          "name": "datetime",
          "type": "Time when the current operation was started at this facility (if this facility has an operation to perform).",
          "desc": "expiryTime"
        },
        {
          "name": "datetime",
          "type": "Time when this facility will finish the current operation (if this facility has an operation to perform).",
          "desc": "contentTypeID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Type ID of content stored at this facility."
        },
        {
          "name": "contentTypeName",
          "type": "string",
          "desc": "Name of content stored at facility at this facility."
        },
        {
          "name": "contentQuantity",
          "type": "int",
          "desc": "Amount of content currently stored in facility at pin location."
        },
        {
          "name": "longitude",
          "type": "float",
          "desc": "Pin longitude."
        },
        {
          "name": "latitude",
          "type": "float",
          "desc": "Pin latitude."
        }
      ]
    },
    {
      "uri": "/char/PlanetaryRoutes.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which planetary routes will be retrieved"
        },
        {
          "name": "planetID",
          "type": "int",
          "desc": "Planet ID of planet for which routes will be retrieved"
        }
      ],
      "resultData": [
        {
          "name": "routeID",
          "type": "long",
          "desc": "Unique route ID."
        },
        {
          "name": "sourcePinID",
          "type": "long",
          "desc": "Source pin ID for this route."
        },
        {
          "name": "destinationPinID",
          "type": "long",
          "desc": "Final destination pin ID for this route."
        },
        {
          "name": "contentTypeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of content transmitted over this route.",
          "type": "contentTypeName",
          "desc": "string"
        },
        {
          "name": "Name of content transmitted over this route.",
          "type": "quantity",
          "desc": "int"
        },
        {
          "name": "Amount of content transmitted over this route.",
          "type": "waypoint1",
          "desc": "long"
        },
        {
          "name": "Pin ID of first waypoint.",
          "type": "waypoint2",
          "desc": "long"
        },
        {
          "name": "Pin ID of second waypoint.",
          "type": "waypoint3",
          "desc": "long"
        },
        {
          "name": "Pin ID of third waypoint.",
          "type": "waypoint4",
          "desc": "long"
        },
        {
          "name": "Pin ID of fourth waypoint.",
          "type": "waypoint5",
          "desc": "long"
        }
      ]
    },
    {
      "uri": "/char/Research.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "agentID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "2",
          "type": "Agent ID of research agent character is conducting research with.",
          "desc": "skillTypeID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Skill type being used to conduct research with this agent."
        },
        {
          "name": "researchStartDate",
          "type": "datetime",
          "desc": "Date and time when research started with this agent."
        },
        {
          "name": "pointsPerDay",
          "type": "decimal",
          "desc": "Number of research points generated per day."
        },
        {
          "name": "remainderPoints",
          "type": "decimal",
          "desc": "Number of research points remaining since last datacore purchase and/or pointsPerDay update."
        }
      ]
    },
    {
      "uri": "/char/SkillInTraining.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which skill in training will be requested"
        }
      ],
      "resultData": [
        {
          "name": "trainingEndTime",
          "type": "datetime",
          "desc": "Time when current skill in training will end."
        },
        {
          "name": "trainingStartTime",
          "type": "datetime",
          "desc": "Time when current skill in training started."
        },
        {
          "name": "trainingTypeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of skill being trained.",
          "type": "trainingStartSP",
          "desc": "int"
        },
        {
          "name": "Number of skill points character had in this skill when training started.",
          "type": "trainingDestinationSP",
          "desc": "int"
        },
        {
          "name": "Number of skill points this character will have when training completes.",
          "type": "trainingToLevel",
          "desc": "int"
        },
        {
          "name": "Level this skill is being trained to.",
          "type": "skillInTraining",
          "desc": "boolean"
        }
      ]
    },
    {
      "uri": "/char/SkillQueue.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which skill queue will be requested"
        }
      ],
      "resultData": [
        {
          "name": "queuePosition",
          "type": "int",
          "desc": "Zero based queue position."
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of the skill in training.",
          "type": "level",
          "desc": "int"
        },
        {
          "name": "Level being trained on this skill.",
          "type": "startSP",
          "desc": "int"
        },
        {
          "name": "Number of skill points character had in this skill when training started.",
          "type": "endSP",
          "desc": "int"
        },
        {
          "name": "Number of skill points this character will have when training completes.",
          "type": "startTime",
          "desc": "datetime"
        },
        {
          "name": "Time when training will start (or started), or null if the queue is paused.",
          "type": "endTime",
          "desc": "datetime"
        }
      ]
    },
    {
      "uri": "/char/Skills.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which skill list will be requested"
        }
      ],
      "resultData": [
        {
          "name": "skills",
          "type": "rowset",
          "desc": "Rowset containing one row per character skill"
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Skill type ID.",
          "type": "typeName",
          "desc": "string"
        },
        {
          "name": "Skill name.",
          "type": "skillpoints",
          "desc": "int"
        },
        {
          "name": "Number of skillpoints trained in this skill.",
          "type": "level",
          "desc": "int"
        },
        {
          "name": "Level skill has been trained to.",
          "type": "published",
          "desc": "boolean"
        },
        {
          "name": "0",
          "type": "unpublished, 1",
          "desc": "published"
        }
      ]
    },
    {
      "uri": "/char/Standings.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which standings will be requested"
        }
      ],
      "resultData": [
        {
          "name": "agents",
          "type": "rowset",
          "desc": "Rowset containing 1 row for each agent standing."
        },
        {
          "name": "fromID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "ID of agent this character has standing with.",
          "type": "fromName",
          "desc": "string"
        },
        {
          "name": "Name of agent this character has standing with.",
          "type": "standing",
          "desc": "float"
        },
        {
          "name": "Current base standing with this entity.",
          "type": "NPCCorporations",
          "desc": "rowset"
        },
        {
          "name": "Rowset containing 1 row for each NPC corporation standing.",
          "type": "fromID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "ID of NPC corporation this character has standing with.",
          "desc": "fromName"
        },
        {
          "name": "string",
          "type": "Name of NPC corporation this character has standing with.",
          "desc": "standing"
        },
        {
          "name": "float",
          "type": "Current base standing with this entity.",
          "desc": "factions"
        },
        {
          "name": "rowset",
          "type": "Rowset containing 1 row for each faction standing.",
          "desc": "fromID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "ID of faction this character has standing with."
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of faction this character has standing with."
        },
        {
          "name": "standing",
          "type": "float",
          "desc": "Current base standing with this entity."
        }
      ]
    },
    {
      "uri": "/char/UpcomingCalendarEvents.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which upcoming calendar events will be requested"
        }
      ],
      "resultData": [
        {
          "name": "eventID",
          "type": "long",
          "desc": "Unique ID of event."
        },
        {
          "name": "ownerID",
          "type": "long",
          "desc": "ID of the character, corporation or alliance that created and owns the event."
        },
        {
          "name": "ownerName",
          "type": "string",
          "desc": "Name of character, corporation or alliance that created the event."
        },
        {
          "name": "This field is blank when ownerID is 1 (CCP).",
          "type": "eventDate",
          "desc": "datetime"
        },
        {
          "name": "Date and time event will start.",
          "type": "eventTitle",
          "desc": "string"
        },
        {
          "name": "Event title.",
          "type": "duration",
          "desc": "int"
        },
        {
          "name": "Duration of the event in minutes.",
          "type": "Minimum value is 0.",
          "desc": "Maximum value is 1440."
        },
        {
          "name": "importance",
          "type": "boolean",
          "desc": "1 (TRUE) if the event is marked"
        },
        {
          "name": "important\".",
          "type": "0 (FALSE) otherwise.",
          "desc": "response"
        },
        {
          "name": "string",
          "type": "Character's response to event invitation.",
          "desc": "One of"
        },
        {
          "name": "Undecided\",",
          "type": "Accepted\",",
          "desc": "Declined"
        },
        {
          "name": "or",
          "type": "Tentative\".",
          "desc": "eventText"
        }
      ]
    },
    {
      "uri": "/char/WalletJournal.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which journal entries will be requested"
        },
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account key of the wallet for which journal entries will be returned"
        },
        {
          "name": "This is optional for character accounts which only have one wallet (accountKey",
          "type": "1000)",
          "desc": "However, corporations have seven wallets with accountKeys numbered from 1000 through 1006"
        },
        {
          "name": "The Corporation",
          "type": "AccountBalance",
          "desc": "call can be used to map corporation wallet to appropriate accountKey"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Optional upper bound for the ref ID of returned journal entries"
        },
        {
          "name": "This argument is normally used to walk to the journal backwards",
          "type": "See Journal Walking for more information",
          "desc": "rowCount"
        },
        {
          "name": "int",
          "type": "Optional limit on number of rows to return",
          "desc": "Default is 1000"
        }
      ],
      "resultData": [
        {
          "name": "date",
          "type": "datetime",
          "desc": "Date and time of transaction."
        },
        {
          "name": "refID",
          "type": "long",
          "desc": "Unique journal reference ID."
        },
        {
          "name": "refTypeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "2",
          "type": "Transaction type.",
          "desc": "ownerName1"
        },
        {
          "name": "string",
          "type": "Name of first party in transaction.",
          "desc": "ownerID1"
        },
        {
          "name": "long",
          "type": "1",
          "desc": "Character or corporation ID of first party."
        },
        {
          "name": "For NPC corporations, see the appropriate cross reference.",
          "type": "ownerName2",
          "desc": "string"
        },
        {
          "name": "Name of second party in transaction.",
          "type": "ownerID2",
          "desc": "long"
        },
        {
          "name": "1",
          "type": "Character or corporation ID of second party.",
          "desc": "For NPC corporations, see the appropriate cross reference."
        },
        {
          "name": "argName1",
          "type": "variable",
          "desc": "Ref type dependent argument name."
        },
        {
          "name": "See the Reference Type table.",
          "type": "argID1",
          "desc": "int"
        },
        {
          "name": "Ref type dependent argument value.",
          "type": "See the Reference Type table.",
          "desc": "amount"
        },
        {
          "name": "decimal",
          "type": "Transaction amount.",
          "desc": "Positive when value transferred to the first owner."
        },
        {
          "name": "Negative otherwise.",
          "type": "balance",
          "desc": "decimal"
        },
        {
          "name": "Wallet balance after transaction occurred.",
          "type": "reason",
          "desc": "string"
        },
        {
          "name": "Ref type dependent reason.",
          "type": "See the Reference Type table.",
          "desc": "taxReceiverID"
        },
        {
          "name": "long",
          "type": "1",
          "desc": "For tax related transactions, gives the corporation ID of the entity receiving the tax."
        },
        {
          "name": "taxAmount",
          "type": "decimal",
          "desc": "Tax amount received for tax related transactions."
        }
      ]
    },
    {
      "uri": "/char/WalletTransactions.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID for which transactions will be requested"
        },
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account key of the wallet for which transactions will be returned"
        },
        {
          "name": "This is optional for character accounts which only have one wallet (accountKey",
          "type": "1000)",
          "desc": "However, corporations have seven wallets with accountKeys numbered from 1000 through 1006"
        },
        {
          "name": "The Corporation",
          "type": "AccountBalance",
          "desc": "call can be used to map corporation wallet to appropriate accountKey"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Optional upper bound for the transaction ID of returned transactions"
        },
        {
          "name": "This argument is normally used to walk to the transaction log backwards",
          "type": "See Journal Walking for more information",
          "desc": "rowCount"
        },
        {
          "name": "int",
          "type": "Optional limit on number of rows to return",
          "desc": "Default is 1000"
        }
      ],
      "resultData": [
        {
          "name": "transactionDateTime",
          "type": "datetime",
          "desc": "Date and time of transaction."
        },
        {
          "name": "transactionID",
          "type": "long",
          "desc": "Unique transaction ID."
        },
        {
          "name": "quantity",
          "type": "int",
          "desc": "Number of items bought or sold."
        },
        {
          "name": "typeName",
          "type": "string",
          "desc": "Name of item bought or sold."
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of item bought or sold.",
          "type": "price",
          "desc": "decimal"
        },
        {
          "name": "Amount paid per unit.",
          "type": "clientID",
          "desc": "long"
        },
        {
          "name": "1",
          "type": "Counterparty character or corporation ID.",
          "desc": "For NPC corporations, see the appropriate cross reference."
        },
        {
          "name": "clientName",
          "type": "string",
          "desc": "Counterparty name."
        },
        {
          "name": "stationID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Station ID in which transaction took place.",
          "type": "stationName",
          "desc": "string"
        },
        {
          "name": "Name of station in which transaction took place.",
          "type": "transactionType",
          "desc": "string"
        },
        {
          "name": "Either",
          "type": "buy",
          "desc": "or"
        },
        {
          "name": "sell",
          "type": "as appropriate.",
          "desc": "transactionFor"
        },
        {
          "name": "string",
          "type": "Either",
          "desc": "personal"
        },
        {
          "name": "or",
          "type": "corporate",
          "desc": "as appropriate."
        },
        {
          "name": "journalTransactionID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Corresponding wallet journal refID.",
          "type": "clientTypeID",
          "desc": "long"
        }
      ]
    },
    {
      "uri": "/corp/AccountBalance.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of accessing character (must have junior accountant access or higher in the character's corporation)"
        }
      ],
      "resultData": [
        {
          "name": "accountID",
          "type": "int",
          "desc": "ID of the account"
        },
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account identifier"
        },
        {
          "name": "balance",
          "type": "decimal",
          "desc": "Amount of ISK in this corporation wallet"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/Bookmarks.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "folderID",
          "type": "int",
          "desc": "Unique folder ID."
        },
        {
          "name": "folderName",
          "type": "string",
          "desc": "Folder name."
        },
        {
          "name": "creatorID",
          "type": "long",
          "desc": "Folder creator ID."
        },
        {
          "name": "Can be character or corporation ID.",
          "type": "Zero for the default bookmark folder.",
          "desc": "bookmarks"
        },
        {
          "name": "rowset",
          "type": "Rowset container 1 row per bookmark in the current folder.",
          "desc": "bookmarkID"
        },
        {
          "name": "int",
          "type": "Unique bookmark ID.",
          "desc": "creatorID"
        },
        {
          "name": "long",
          "type": "Bookmark creator ID.",
          "desc": "Can be character or corporation ID."
        },
        {
          "name": "created",
          "type": "datetime",
          "desc": "Date and time when bookmark was created."
        },
        {
          "name": "itemID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Item ID of the item to which the bookmark refers, or 0 if the bookmark refers to a location.",
          "type": "typeID",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Type ID of the item to which the bookmark refers (even if the bookmark refers to a location instead of an item).",
          "desc": "locationID"
        },
        {
          "name": "long",
          "type": "1",
          "desc": "Location ID of the solar sytem to which this bookmark refers."
        },
        {
          "name": "x",
          "type": "double",
          "desc": "X location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "y",
          "type": "double",
          "desc": "Y location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "z",
          "type": "double",
          "desc": "Z location of bookmark (relative to system sun) if this bookmark does not refer to an item."
        },
        {
          "name": "memo",
          "type": "string",
          "desc": "Bookmark description (owner specified)."
        },
        {
          "name": "note",
          "type": "string",
          "desc": "Bookmark annotation (owner specified)."
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/Contracts.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "contractID",
          "type": "long",
          "desc": "ID of a specific contract (Optional)"
        }
      ],
      "resultData": []
    },
    {
      "uri": "/corp/CorporationSheet.xml.aspx",
      "parameters": [
        {
          "name": "corporationID",
          "type": "long",
          "desc": "ID of corporation"
        },
        {
          "name": "corporationID",
          "type": "long",
          "desc": "Corporation ID"
        },
        {
          "name": "corporationName",
          "type": "string",
          "desc": "Name of the Corporation"
        },
        {
          "name": "ticker",
          "type": "string",
          "desc": "Corp Ticker, often used as a nickname"
        },
        {
          "name": "ceoID",
          "type": "long",
          "desc": "Character ID of the CEO"
        },
        {
          "name": "This will be 1 for closed corps",
          "type": "ceoName",
          "desc": "string"
        },
        {
          "name": "Character Name of the CEO",
          "type": "This will be",
          "desc": "EVE System"
        },
        {
          "name": "for closed corps",
          "type": "stationID",
          "desc": "long"
        },
        {
          "name": "Station ID of the Corporation HQ",
          "type": "stationName",
          "desc": "string"
        },
        {
          "name": "Station Name of the Corporation HQ",
          "type": "description",
          "desc": "string"
        },
        {
          "name": "Corp Description Text",
          "type": "url",
          "desc": "string"
        },
        {
          "name": "Corporation URL",
          "type": "allianceID",
          "desc": "long"
        },
        {
          "name": "Alliance ID, if any",
          "type": "allianceName",
          "desc": "string"
        },
        {
          "name": "Alliance Name, if any",
          "type": "Is null if not present",
          "desc": "factionID"
        },
        {
          "name": "int",
          "type": "Faction ID, if any",
          "desc": "taxRate"
        },
        {
          "name": "double",
          "type": "Taxes on missions and ratting",
          "desc": "memberCount"
        },
        {
          "name": "int",
          "type": "Current number of Members",
          "desc": "memberLimit"
        },
        {
          "name": "int",
          "type": "Maximum number of members based on CEO corp Management skills",
          "desc": "shares"
        }
      ],
      "resultData": [
        {
          "name": "corporationID",
          "type": "long",
          "desc": "Corporation ID"
        },
        {
          "name": "corporationName",
          "type": "string",
          "desc": "Name of the Corporation."
        },
        {
          "name": "ticker",
          "type": "string",
          "desc": "Corp Ticker, often used as a nickname."
        },
        {
          "name": "ceoID",
          "type": "long",
          "desc": "Character ID of the CEO. This will be 1 for closed corps."
        },
        {
          "name": "ceoName",
          "type": "string",
          "desc": "Character Name of the CEO. This will be"
        },
        {
          "name": "EVE System",
          "type": "for closed corps.",
          "desc": "stationID"
        },
        {
          "name": "long",
          "type": "Station ID of the Corporation HQ.",
          "desc": "stationName"
        },
        {
          "name": "string",
          "type": "Station Name of the Corporation HQ.",
          "desc": "description"
        },
        {
          "name": "string",
          "type": "Corp Description Text",
          "desc": "url"
        },
        {
          "name": "string",
          "type": "Corporation URL.",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "Alliance ID, if any.",
          "desc": "allianceName"
        },
        {
          "name": "string",
          "type": "Alliance Name, if any. Is null if not present.",
          "desc": "factionID"
        },
        {
          "name": "int",
          "type": "Faction ID, if any.",
          "desc": "taxRate"
        },
        {
          "name": "double",
          "type": "Taxes on missions and ratting.",
          "desc": "memberCount"
        },
        {
          "name": "int",
          "type": "Current number of Members.",
          "desc": "memberLimit"
        },
        {
          "name": "int",
          "type": "Maximum number of members based on CEO corp Management skills.",
          "desc": "shares"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/IndustryJobs.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "jobID",
          "type": "long",
          "desc": "Unique job ID."
        },
        {
          "name": "installerID",
          "type": "long",
          "desc": "Character ID of the character which installed this job."
        },
        {
          "name": "installerName",
          "type": "char",
          "desc": "Name of character which installed this job."
        },
        {
          "name": "facilityID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3",
          "desc": "Facility ID where this job is running (see cross-references)."
        },
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Solar system where facility is located.",
          "type": "solarSystemName",
          "desc": "string"
        },
        {
          "name": "Name of solar system where facility is located.",
          "type": "stationID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4",
          "type": "Station ID where industry facility is located.",
          "desc": "activityID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job activity ID (see cross-reference)."
        },
        {
          "name": "blueprintID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Blueprint asset item ID.",
          "type": "blueprintTypeID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4],",
          "type": "5",
          "desc": "Blueprint type ID."
        },
        {
          "name": "blueprintTypeName",
          "type": "char",
          "desc": "Name of installed blueprint."
        },
        {
          "name": "blueprintLocationID",
          "type": "int",
          "desc": "Location ID of the location from which the blueprint was installed."
        },
        {
          "name": "Normally a station ID, but can also be an asset (e.g. container) or corporation facility.",
          "type": "outputLocationID",
          "desc": "int"
        },
        {
          "name": "Location ID of the location to which the output of the job will be delivered.",
          "type": "Normally a station ID, but can also be a corporation facility.",
          "desc": "runs"
        },
        {
          "name": "int",
          "type": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy.",
          "desc": "cost"
        },
        {
          "name": "decimal",
          "type": "The sume of job installation fee and industry facility tax.",
          "desc": "teamID"
        },
        {
          "name": "int",
          "type": "N/A",
          "desc": "retired in Proteus"
        },
        {
          "name": "licensedRuns",
          "type": "int",
          "desc": "Number of runs blueprint is licensed for."
        },
        {
          "name": "probability",
          "type": "float",
          "desc": "Chance of success for invention."
        },
        {
          "name": "productTypeID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4],"
        },
        {
          "name": "5",
          "type": "Type ID of product (manufactured, copied or invented).",
          "desc": "productTypeName"
        },
        {
          "name": "int",
          "type": "Type name of product (manufactured, copied or invented).",
          "desc": "status"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job status (see cross-reference)."
        },
        {
          "name": "timeInSeconds",
          "type": "int",
          "desc": "Job duration in seconds."
        },
        {
          "name": "startDate",
          "type": "datetime",
          "desc": "Time when this job started."
        },
        {
          "name": "endDate",
          "type": "datetime",
          "desc": "Time when this job finished."
        },
        {
          "name": "pauseDate",
          "type": "datetime",
          "desc": "Time when this job was paused (i.e. time when the facility where this job was installed went offline)."
        },
        {
          "name": "completedDate",
          "type": "datetime",
          "desc": "Time when this job was completed."
        },
        {
          "name": "completedCharacterID",
          "type": "long",
          "desc": "Character ID of character which completed this job."
        },
        {
          "name": "successfulRuns",
          "type": "int",
          "desc": "Number of successful runs for this job."
        }
      ]
    },
    {
      "uri": "/corp/IndustryJobsHistory.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "jobID",
          "type": "long",
          "desc": "Unique job ID."
        },
        {
          "name": "installerID",
          "type": "long",
          "desc": "Character ID of the character which installed this job."
        },
        {
          "name": "installerName",
          "type": "char",
          "desc": "Name of character which installed this job."
        },
        {
          "name": "facilityID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3",
          "desc": "Facility ID where this job is running (see cross-references)."
        },
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Solar system where facility is located.",
          "type": "solarSystemName",
          "desc": "string"
        },
        {
          "name": "Name of solar system where facility is located.",
          "type": "stationID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4",
          "type": "Station ID where industry facility is located.",
          "desc": "activityID"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job activity ID (see cross-reference)."
        },
        {
          "name": "blueprintID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Blueprint asset item ID.",
          "type": "blueprintTypeID",
          "desc": "int"
        },
        {
          "name": "1],",
          "type": "2],",
          "desc": "3],"
        },
        {
          "name": "4],",
          "type": "5",
          "desc": "Blueprint type ID."
        },
        {
          "name": "blueprintTypeName",
          "type": "char",
          "desc": "Name of installed blueprint."
        },
        {
          "name": "blueprintLocationID",
          "type": "int",
          "desc": "Location ID of the location from which the blueprint was installed."
        },
        {
          "name": "Normally a station ID, but can also be an asset (e.g. container) or corporation facility.",
          "type": "outputLocationID",
          "desc": "int"
        },
        {
          "name": "Location ID of the location to which the output of the job will be delivered.",
          "type": "Normally a station ID, but can also be a corporation facility.",
          "desc": "runs"
        },
        {
          "name": "int",
          "type": "Number of runs for a manufacturing job, or number of copies to make for a blueprint copy.",
          "desc": "cost"
        },
        {
          "name": "decimal",
          "type": "The sume of job installation fee and industry facility tax.",
          "desc": "teamID"
        },
        {
          "name": "int",
          "type": "N/A",
          "desc": "retired in Proteus"
        },
        {
          "name": "licensedRuns",
          "type": "int",
          "desc": "Number of runs blueprint is licensed for."
        },
        {
          "name": "probability",
          "type": "float",
          "desc": "Chance of success for invention."
        },
        {
          "name": "productTypeID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4],"
        },
        {
          "name": "5",
          "type": "Type ID of product (manufactured, copied or invented).",
          "desc": "productTypeName"
        },
        {
          "name": "int",
          "type": "Type name of product (manufactured, copied or invented).",
          "desc": "status"
        },
        {
          "name": "int",
          "type": "1",
          "desc": "Job status (see cross-reference)."
        },
        {
          "name": "timeInSeconds",
          "type": "int",
          "desc": "Job duration in seconds."
        },
        {
          "name": "startDate",
          "type": "datetime",
          "desc": "Time when this job started."
        },
        {
          "name": "endDate",
          "type": "datetime",
          "desc": "Time when this job finished."
        },
        {
          "name": "pauseDate",
          "type": "datetime",
          "desc": "Time when this job was paused (e.g. time when the facility where this job was installed went offline)."
        },
        {
          "name": "completedDate",
          "type": "datetime",
          "desc": "Time when this job was completed."
        },
        {
          "name": "completedCharacterID",
          "type": "long",
          "desc": "Character ID of character which completed this job."
        },
        {
          "name": "successfulRuns",
          "type": "int",
          "desc": "Number of successful runs for this job."
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/Locations.xml.aspx",
      "parameters": [
        {
          "name": "ids",
          "type": "long",
          "desc": "IDs of items to retrieve location information for"
        }
      ],
      "resultData": []
    },
    {
      "uri": "/corp/MarketOrders.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of character"
        },
        {
          "name": "Optional only if the key is character specific, otherwise mandatory",
          "type": "orderID",
          "desc": "long"
        }
      ],
      "resultData": [
        {
          "name": "orderID",
          "type": "long",
          "desc": "Unique order ID."
        },
        {
          "name": "charID",
          "type": "long",
          "desc": "Character ID of the character which placed this order."
        },
        {
          "name": "stationID",
          "type": "int",
          "desc": "1],"
        },
        {
          "name": "2],",
          "type": "3],",
          "desc": "4"
        },
        {
          "name": "Station ID where order was placed.",
          "type": "volEntered",
          "desc": "int"
        },
        {
          "name": "Quantity of items required or offered at time order was placed.",
          "type": "volRemaining",
          "desc": "int"
        },
        {
          "name": "Quantity of items still required or offered.",
          "type": "minVolume",
          "desc": "int"
        },
        {
          "name": "For bids (buy orders), the minimum quantity that will be accepted in a matching offer (sell order).",
          "type": "orderState",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Current order state.",
          "desc": "typeID"
        },
        {
          "name": "int",
          "type": "1],",
          "desc": "2],"
        },
        {
          "name": "3],",
          "type": "4],",
          "desc": "5"
        },
        {
          "name": "The type ID of the item transacted in this order.",
          "type": "range",
          "desc": "int"
        },
        {
          "name": "1",
          "type": "Valid order range.",
          "desc": "accountKey"
        },
        {
          "name": "int",
          "type": "Wallet division for the buyer or seller of this order.",
          "desc": "Always 1000 for characters."
        },
        {
          "name": "Currently 1000 through 1006 for corporations.",
          "type": "duration",
          "desc": "int"
        },
        {
          "name": "Numer of days for which order is valid (starting from the issued date).",
          "type": "An order expires at time issued",
          "desc": "duration."
        },
        {
          "name": "escrow",
          "type": "decimal",
          "desc": "For buy orders, the amount of ISK in escrow."
        },
        {
          "name": "price",
          "type": "decimal",
          "desc": "Cost per unit for this order."
        },
        {
          "name": "bid",
          "type": "bool",
          "desc": "True (1) for a bid (buy) order."
        },
        {
          "name": "False (0) for an offer (sell) order.",
          "type": "issued",
          "desc": "datetime"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/MemberSecurity.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of the member"
        },
        {
          "name": "name",
          "type": "string",
          "desc": "Name of the member"
        },
        {
          "name": "Rowset roles",
          "type": "roleID",
          "desc": "int64"
        },
        {
          "name": "ID of the Role",
          "type": "roleName",
          "desc": "string"
        },
        {
          "name": "Name of the Role",
          "type": "Rowset grantableRoles",
          "desc": "roleID"
        },
        {
          "name": "int64",
          "type": "ID of the Role",
          "desc": "roleName"
        },
        {
          "name": "string",
          "type": "Name of the Role",
          "desc": "Rowset rolesAtHQ"
        },
        {
          "name": "roleID",
          "type": "int64",
          "desc": "ID of the Role"
        },
        {
          "name": "roleName",
          "type": "string",
          "desc": "Name of the Role"
        },
        {
          "name": "Rowset grantableRolesAtHQ",
          "type": "roleID",
          "desc": "int64"
        },
        {
          "name": "ID of the Role",
          "type": "roleName",
          "desc": "string"
        },
        {
          "name": "Name of the Role",
          "type": "Rowset rolesAtBase",
          "desc": "roleID"
        },
        {
          "name": "int64",
          "type": "ID of the Role",
          "desc": "roleName"
        },
        {
          "name": "string",
          "type": "Name of the Role",
          "desc": "Rowset grantableRolesAtBase"
        },
        {
          "name": "roleID",
          "type": "int64",
          "desc": "ID of the Role"
        },
        {
          "name": "roleName",
          "type": "string",
          "desc": "Name of the Role"
        },
        {
          "name": "Rowset rolesAtOther",
          "type": "roleID",
          "desc": "int64"
        },
        {
          "name": "ID of the Role",
          "type": "roleName",
          "desc": "string"
        },
        {
          "name": "Name of the Role",
          "type": "Rowset grantableRolesAtOther",
          "desc": "roleID"
        },
        {
          "name": "int64",
          "type": "ID of the Role",
          "desc": "roleName"
        },
        {
          "name": "string",
          "type": "Name of the Role",
          "desc": "Rowset titles"
        },
        {
          "name": "titleID",
          "type": "int32",
          "desc": "ID of the Title"
        },
        {
          "name": "titleName",
          "type": "string",
          "desc": "Name of the Title"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/MemberTracking.xml.aspx",
      "parameters": [
        {
          "name": "extended",
          "type": "bool",
          "desc": "0 (False, default)"
        },
        {
          "name": "return the limited member tracking",
          "type": "1 (True)",
          "desc": "return the extended member tracking"
        }
      ],
      "resultData": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of the member"
        },
        {
          "name": "name",
          "type": "string",
          "desc": "Name of the member"
        },
        {
          "name": "startDateTime",
          "type": "datetime",
          "desc": "join date of the member"
        },
        {
          "name": "baseID",
          "type": "long",
          "desc": "stationID where the member has its base"
        },
        {
          "name": "base",
          "type": "string",
          "desc": "station name where the member has its base"
        },
        {
          "name": "title",
          "type": "string",
          "desc": "titles of the member"
        },
        {
          "name": "characterID",
          "type": "long",
          "desc": "ID of the member"
        },
        {
          "name": "name",
          "type": "string",
          "desc": "Name of the member"
        },
        {
          "name": "startDateTime",
          "type": "datetime",
          "desc": "join date of the member"
        },
        {
          "name": "baseID",
          "type": "long",
          "desc": "stationID where the member has its base"
        },
        {
          "name": "base",
          "type": "string",
          "desc": "station name where the member has its base"
        },
        {
          "name": "title",
          "type": "string",
          "desc": "titles of the member"
        },
        {
          "name": "logonDateTime",
          "type": "datetime",
          "desc": "last logon time of the member"
        },
        {
          "name": "logoffDateTime",
          "type": "datetime",
          "desc": "last logoff time of the member"
        },
        {
          "name": "locationID",
          "type": "long",
          "desc": "the locationID of the member (station or solarsystem)"
        },
        {
          "name": "location",
          "type": "string",
          "desc": "the location name of the member (station or solarsystem)"
        },
        {
          "name": "shipTypeID",
          "type": "int",
          "desc": "the members current ships's typeID"
        },
        {
          "name": "shipType",
          "type": "string",
          "desc": "the members current ships's type name"
        },
        {
          "name": "roles",
          "type": "long",
          "desc": "the roles a member has"
        },
        {
          "name": "grantableRoles",
          "type": "long",
          "desc": "the grantable roles a member has"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/Standings.xml.aspx",
      "parameters": [
        {
          "name": "fromID",
          "type": "long",
          "desc": "Agent ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Agent"
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the agent (as seen from the agent's perspective)"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Corporation ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Corporation"
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the corporation (as seen from the npc corporation's perspective)"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Faction ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Faction"
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the faction (as seen from the faction's perspective)."
        }
      ],
      "resultData": [
        {
          "name": "fromID",
          "type": "long",
          "desc": "Agent ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Agent."
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the agent (as seen from the agent's perspective)."
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Corporation ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Corporation."
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the corporation (as seen from the npc corporation's perspective)."
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Faction ID"
        },
        {
          "name": "fromName",
          "type": "string",
          "desc": "Name of the Faction."
        },
        {
          "name": "standing",
          "type": "double",
          "desc": "Standing of the faction (as seen from the faction's perspective)."
        }
      ]
    },
    {
      "uri": "/corp/StarbaseDetail.xml.aspx",
      "parameters": [
        {
          "name": "itemID",
          "type": "long",
          "desc": "ItemID of the POS as given in the starbase list"
        }
      ],
      "resultData": []
    },
    {
      "uri": "/corp/StarbaseList.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "itemID",
          "type": "long",
          "desc": "Unique ID for this POS. This is used to request details via the StarbaseDetail API page."
        },
        {
          "name": "typeID",
          "type": "long",
          "desc": "Type ID. References the invTypes table."
        },
        {
          "name": "locationID",
          "type": "long",
          "desc": "Solar system ID. References the mapSolarSystems and mapDenormalize tables."
        },
        {
          "name": "moonID",
          "type": "long",
          "desc": "Celestial object ID. References the mapDenormalize table."
        },
        {
          "name": "state",
          "type": "int",
          "desc": "Mode of the POS. See known POS states."
        },
        {
          "name": "stateTimestamp",
          "type": "datetime",
          "desc": "Depends on the state. See known POS states."
        },
        {
          "name": "onlineTimestamp",
          "type": "datetime",
          "desc": "When the POS will be online or most recently was put online. See known POS states."
        },
        {
          "name": "standingOwnerID",
          "type": "long",
          "desc": "ID of"
        }
      ]
    },
    {
      "uri": "",
      "parameters": [],
      "resultData": []
    },
    {
      "uri": "/corp/WalletJournal.xml.aspx",
      "parameters": [
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account key of the wallet for which journal entries will be returned"
        },
        {
          "name": "Corporations have seven wallets numbered from 1000 through 1006",
          "type": "The Corporation",
          "desc": "AccountBalance call can be used to map corporation wallet to appropriate accountKey"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Optional upper bound for the ref ID of returned journal entries"
        },
        {
          "name": "This argument is normally used to walk to the journal backwards",
          "type": "See Journal Walking for more information",
          "desc": "rowCount"
        },
        {
          "name": "int",
          "type": "Optional limit on number of rows to return",
          "desc": "Default is 1000"
        }
      ],
      "resultData": [
        {
          "name": "date",
          "type": "datetime",
          "desc": "Date and time of transaction."
        },
        {
          "name": "refID",
          "type": "long",
          "desc": "Unique journal reference ID."
        },
        {
          "name": "refTypeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Transaction type.",
          "type": "ownerName1",
          "desc": "string"
        },
        {
          "name": "Name of first party in transaction.",
          "type": "ownerID1",
          "desc": "long"
        },
        {
          "name": "1",
          "type": "Character or corporation ID of first party.",
          "desc": "For NPC corporations, see the appropriate cross reference."
        },
        {
          "name": "ownerName2",
          "type": "string",
          "desc": "Name of second party in transaction."
        },
        {
          "name": "ownerID2",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Character or corporation ID of second party.",
          "type": "For NPC corporations, see the appropriate cross reference.",
          "desc": "argName1"
        },
        {
          "name": "variable",
          "type": "Ref type dependent argument name.",
          "desc": "See the Reference Type table."
        },
        {
          "name": "argID1",
          "type": "int",
          "desc": "Ref type dependent argument value."
        },
        {
          "name": "See the Reference Type table.",
          "type": "amount",
          "desc": "decimal"
        },
        {
          "name": "Transaction amount.",
          "type": "Positive when value transferred to the first owner.",
          "desc": "Negative otherwise."
        },
        {
          "name": "balance",
          "type": "decimal",
          "desc": "Wallet balance after transaction occurred."
        },
        {
          "name": "reason",
          "type": "string",
          "desc": "Ref type dependent reason."
        },
        {
          "name": "See the Reference Type table.",
          "type": "owner1TypeID",
          "desc": "int"
        },
        {
          "name": "Determines the owner type",
          "type": "2",
          "desc": "Corporation"
        },
        {
          "name": "1373-1386",
          "type": "Character",
          "desc": "16159"
        },
        {
          "name": "Alliance",
          "type": "owner2TypeID",
          "desc": "int"
        },
        {
          "name": "Determines the owner type",
          "type": "2",
          "desc": "Corporation"
        },
        {
          "name": "1373-1386",
          "type": "Character",
          "desc": "16159"
        }
      ]
    },
    {
      "uri": "/corp/WalletTransactions.xml.aspx",
      "parameters": [
        {
          "name": "accountKey",
          "type": "int",
          "desc": "Account key of the wallet for which transactions will be returned"
        },
        {
          "name": "Corporations have seven wallets numbered from 1000 through 1006",
          "type": "The Corporation",
          "desc": "AccountBalance call can be used to map corporation wallet to appropriate accountKey"
        },
        {
          "name": "fromID",
          "type": "long",
          "desc": "Optional upper bound for the transaction ID of returned transactions"
        },
        {
          "name": "This argument is normally used to walk to the transaction log backwards",
          "type": "See Journal Walking for more information",
          "desc": "rowCount"
        },
        {
          "name": "int",
          "type": "Optional limit on number of rows to return",
          "desc": "Default is 1000"
        }
      ],
      "resultData": [
        {
          "name": "transactionDateTime",
          "type": "datetime",
          "desc": "Date and time of transaction."
        },
        {
          "name": "transactionID",
          "type": "long",
          "desc": "Unique tranaction ID."
        },
        {
          "name": "quantity",
          "type": "int",
          "desc": "Number of items bought or sold."
        },
        {
          "name": "typeName",
          "type": "string",
          "desc": "Name of item bought or sold."
        },
        {
          "name": "typeID",
          "type": "int",
          "desc": "1"
        },
        {
          "name": "Type ID of item bought or sold.",
          "type": "price",
          "desc": "decimal"
        },
        {
          "name": "Amount paid per unit.",
          "type": "clientID",
          "desc": "long"
        },
        {
          "name": "1",
          "type": "Counterparty character or corporation ID.",
          "desc": "For NPC corporations, see the appropriate cross reference."
        },
        {
          "name": "clientName",
          "type": "string",
          "desc": "Counterparty name."
        },
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID of character which represented corporation in transaction."
        },
        {
          "name": "characterName",
          "type": "string",
          "desc": "Character name of character which represented corporation in transaction."
        },
        {
          "name": "stationID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Station ID in which transaction took place.",
          "type": "stationName",
          "desc": "string"
        },
        {
          "name": "Name of station in which transaction took place.",
          "type": "transactionType",
          "desc": "string"
        },
        {
          "name": "Either",
          "type": "buy",
          "desc": "or"
        },
        {
          "name": "sell",
          "type": "as appropriate.",
          "desc": "transactionFor"
        },
        {
          "name": "string",
          "type": "Either",
          "desc": "personal"
        },
        {
          "name": "or",
          "type": "corporate",
          "desc": "as appropriate."
        },
        {
          "name": "journalTransactionID",
          "type": "long",
          "desc": "1"
        },
        {
          "name": "Corresponding wallet journal refID.",
          "type": "clientTypeID",
          "desc": "long"
        }
      ]
    },
    {
      "uri": "/eve/AllianceList.xml.aspx",
      "parameters": [
        {
          "name": "version",
          "type": "Int",
          "desc": "Optional parameter"
        },
        {
          "name": "0 _(default)_",
          "type": "return a list of alliances and member corporations",
          "desc": "1"
        }
      ],
      "resultData": [
        {
          "name": "Rowset alliances",
          "type": "name",
          "desc": "string"
        },
        {
          "name": "Name of the alliance.",
          "type": "shortName",
          "desc": "string"
        },
        {
          "name": "Alliance ticker.",
          "type": "allianceID",
          "desc": "int"
        },
        {
          "name": "ID number of the alliance.",
          "type": "executorCorpID",
          "desc": "int"
        },
        {
          "name": "Corporation ID of the executor corporation.",
          "type": "memberCount",
          "desc": "int"
        },
        {
          "name": "Number of pilots in the alliance.",
          "type": "startDate",
          "desc": "datetime"
        },
        {
          "name": "Date the alliance was founded.",
          "type": "Rowset memberCorporations",
          "desc": "corporationID"
        },
        {
          "name": "int",
          "type": "Corporation ID of the member corporation.",
          "desc": "startDate"
        }
      ]
    },
    {
      "uri": "/eve/CharacterAffiliation.xml.aspx",
      "parameters": [
        {
          "name": "ids",
          "type": "String",
          "desc": "Comma-separated list of characterIDs"
        }
      ],
      "resultData": [
        {
          "name": "Rowset characters",
          "type": "characterID",
          "desc": "int"
        },
        {
          "name": "ID number of the character.",
          "type": "characterName",
          "desc": "string"
        },
        {
          "name": "Name of the character.",
          "type": "corporationID",
          "desc": "int"
        },
        {
          "name": "ID number of the character's current corporation.",
          "type": "corporationName",
          "desc": "string"
        },
        {
          "name": "Name of the character's current corporation.",
          "type": "allianceID",
          "desc": "int"
        },
        {
          "name": "ID number of the character's current alliance.",
          "type": "allianceName",
          "desc": "string"
        },
        {
          "name": "Name of the character's current alliance.",
          "type": "factionID",
          "desc": "int"
        },
        {
          "name": "ID number of the character's current faction.",
          "type": "factionName",
          "desc": "string"
        }
      ]
    },
    {
      "uri": "/eve/CharacterID.xml.aspx",
      "parameters": [
        {
          "name": "names",
          "type": "String",
          "desc": "Comma-separated list of character names to query"
        }
      ],
      "resultData": [
        {
          "name": "Rowset characters",
          "type": "name",
          "desc": "string"
        },
        {
          "name": "Character name.",
          "type": "characterID",
          "desc": "int"
        }
      ]
    },
    {
      "uri": "/eve/CharacterInfo.xml.aspx",
      "parameters": [
        {
          "name": "characterID",
          "type": "String",
          "desc": "ID of character"
        }
      ],
      "resultData": [
        {
          "name": "characterID",
          "type": "long",
          "desc": "Character ID"
        },
        {
          "name": "characterName",
          "type": "string",
          "desc": "Character name"
        },
        {
          "name": "race",
          "type": "string",
          "desc": "Character's race"
        },
        {
          "name": "bloodlineID",
          "type": "long",
          "desc": "ID for character's bloodline"
        },
        {
          "name": "bloodline",
          "type": "string",
          "desc": "Character's bloodline"
        },
        {
          "name": "ancestryID",
          "type": "long",
          "desc": "ID for character's ancestry"
        },
        {
          "name": "ancestry",
          "type": "string",
          "desc": "Character's ancestry"
        },
        {
          "name": "accountBalance",
          "type": "decimal",
          "desc": "Amount of ISK the character has (only for access mask 16777216)"
        },
        {
          "name": "skillPoints",
          "type": "long",
          "desc": "Amount of skill points the character has (only for access masks 8388608 and 16777216)"
        },
        {
          "name": "nextTrainingEnds",
          "type": "datetime",
          "desc": "Time when the current skill finishes training (only for access masks 8388608 and 16777216)"
        },
        {
          "name": "Note",
          "type": "Author could not verify this.",
          "desc": "shipName"
        },
        {
          "name": "string",
          "type": "Name of the ship the character is in (only for access masks 8388608 and 16777216)",
          "desc": "shipTypeID"
        },
        {
          "name": "long",
          "type": "typeID of the ship the character is in (only for access masks 8388608 and 16777216)",
          "desc": "shipTypeName"
        },
        {
          "name": "string",
          "type": "typeName of the ship the character is in (only for access masks 8388608 and 16777216)",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of character's corporation",
          "desc": "corporation"
        },
        {
          "name": "string",
          "type": "Character's corporation",
          "desc": "corporationDate"
        },
        {
          "name": "datetime",
          "type": "Time and date when the character joined the corporation",
          "desc": "allianceID"
        },
        {
          "name": "long",
          "type": "ID of character's alliance",
          "desc": "alliance"
        },
        {
          "name": "string",
          "type": "Character's alliance",
          "desc": "allianceDate"
        },
        {
          "name": "datetime",
          "type": "Time and date when the character became part of the alliance",
          "desc": "lastKnownLocation"
        },
        {
          "name": "string",
          "type": "Name of the character's current location (only for access mask 16777216)",
          "desc": "securityStatus"
        },
        {
          "name": "decimal",
          "type": "Character's security status",
          "desc": "Rowset employmentHistory"
        },
        {
          "name": "recordID",
          "type": "long",
          "desc": "Seems to be a unique number for that specific change in character/corporation affiliation."
        },
        {
          "name": "Note",
          "type": "Author could not verify this.",
          "desc": "corporationID"
        },
        {
          "name": "long",
          "type": "ID of the corporation that the character joined",
          "desc": "corporationName"
        },
        {
          "name": "string",
          "type": "Name of the corporation",
          "desc": "startDate"
        }
      ]
    },
    {
      "uri": "/eve/CharacterName.xml.aspx",
      "parameters": [
        {
          "name": "ids",
          "type": "String",
          "desc": "Comma-separated list of ownerIDs to query"
        }
      ],
      "resultData": [
        {
          "name": "Rowset characters",
          "type": "name",
          "desc": "string"
        },
        {
          "name": "Name of character/corporation/alliance and so on",
          "type": "characterID",
          "desc": "long"
        }
      ]
    },
    {
      "uri": "/eve/ConquerableStationList.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "stationID",
          "type": "int",
          "desc": "The unique identification number of the station."
        },
        {
          "name": "stationName",
          "type": "string",
          "desc": "The name of the station set by the occupying corporation"
        },
        {
          "name": "stationTypeID",
          "type": "int",
          "desc": "The typeID of the station."
        },
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "The Solar System ID where the station is anchored."
        },
        {
          "name": "corporationID",
          "type": "int",
          "desc": "The corporationID of the occupying corporation."
        },
        {
          "name": "corporationName",
          "type": "string",
          "desc": "The name of the occupying corporation."
        },
        {
          "name": "x",
          "type": "long",
          "desc": "x, y and z make up the coordinates in the solar system of the station"
        },
        {
          "name": "y",
          "type": "long",
          "desc": "x, y and z make up the coordinates in the solar system of the station"
        },
        {
          "name": "z",
          "type": "long",
          "desc": "x, y and z make up the coordinates in the solar system of the station"
        }
      ]
    },
    {
      "uri": "/eve/ErrorList.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "errorCode",
          "type": "int",
          "desc": "The ID of the error code."
        },
        {
          "name": "errorText",
          "type": "string",
          "desc": "Textual description of the error."
        }
      ]
    },
    {
      "uri": "/eve/RefTypes.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "refTypeID",
          "type": "int",
          "desc": "Reference ID for the transactions from the either the Corporation or Character wallet journal"
        },
        {
          "name": "refTypeName",
          "type": "string",
          "desc": "What kind of transaction it is."
        }
      ]
    },
    {
      "uri": "/eve/TypeName.xml.aspx",
      "parameters": [
        {
          "name": "ids",
          "type": "String",
          "desc": "Comma-separated list of typeIDs to query"
        }
      ],
      "resultData": [
        {
          "name": "Rowset types",
          "type": "typeID",
          "desc": "int"
        },
        {
          "name": "typeID of object",
          "type": "typeName",
          "desc": "string"
        }
      ]
    },
    {
      "uri": "/map/FacWarSystems.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "The unique identification number of a solar system. You can look up the details of the solar system in the table mapSolarSystems of the SDE"
        },
        {
          "name": "solarSystemName",
          "type": "string",
          "desc": "The name of a solar system."
        },
        {
          "name": "occupyingFactionID",
          "type": "int",
          "desc": "The ID of the NPC Faction that has occupied this constellation, or 0 if the default(sovereign) faction occupies the system."
        },
        {
          "name": "occupyingFactionName",
          "type": "string",
          "desc": "The name of the occupying NPC Faction."
        },
        {
          "name": "owningFactionID",
          "type": "int",
          "desc": "The ID of the NPC Faction who owns the system, it may be occupied by another Faction."
        },
        {
          "name": "owningFactionName",
          "type": "string",
          "desc": "The name of the NPC Faction who owns the system, it may be occupied by another Faction."
        },
        {
          "name": "contested",
          "type": "boolean",
          "desc": "Whether system is being fought over."
        },
        {
          "name": "victoryPoints",
          "type": "int",
          "desc": "Current number of victory points earned in the system by the aggressing faction."
        },
        {
          "name": "victoryPointThreshold",
          "type": "int",
          "desc": "The amount of victory points required for the aggressing faction to take ownership of the system."
        }
      ]
    },
    {
      "uri": "/map/Jumps.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "The unique identification number of a solar system. You can look up the details of the solar system in the table mapSolarSystems of the SDE"
        },
        {
          "name": "shipJumps",
          "type": "int",
          "desc": "The number of jumps into the system in the last hour."
        }
      ]
    },
    {
      "uri": "/map/kills.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "The unique identification number of a solar system. You can look up the details of the solar system in the table mapSolarSystems of the SDE"
        },
        {
          "name": "shipKills",
          "type": "int",
          "desc": "Number of player ships killed in this system."
        },
        {
          "name": "factionKills",
          "type": "int",
          "desc": "Number of NPC ships killed in this system."
        },
        {
          "name": "podKills",
          "type": "int",
          "desc": "Number of pods killed in this system."
        }
      ]
    },
    {
      "uri": "/map/Sovereignty.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "solarSystemID",
          "type": "int",
          "desc": "The unique identification number of a solar system. You can look up the details of the solar system in the table mapSolarSystems of the SDE"
        },
        {
          "name": "allianceID",
          "type": "int",
          "desc": "The ID of the alliance that has sovereignty of this solar system, or 0 if nobody has sovereignty. The Alliance List provides a list of the alliances."
        },
        {
          "name": "corporationID",
          "type": "int",
          "desc": "The ID of the corporation that owns the Territorial Claim Unit (TCU) if there is one in the system."
        },
        {
          "name": "factionID",
          "type": "int",
          "desc": "The NPC Faction controlling the system. The SDE has a table with the faction names."
        },
        {
          "name": "solarSystemName",
          "type": "string",
          "desc": "The name of the solar system."
        }
      ]
    },
    {
      "uri": "/server/ServerStatus.xml.aspx",
      "parameters": [],
      "resultData": [
        {
          "name": "serverOpen",
          "type": "boolean",
          "desc": "Server status"
        },
        {
          "name": "onlinePlayers",
          "type": "integer",
          "desc": "How many players are currently signed into EVE.."
        }
      ]
    }
  ]
}
